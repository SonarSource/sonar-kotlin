gcp_credentials: ENCRYPTED[!149d4005ecdba4cdd78bb5ba22756ebb98bf8e3367ee2e9ab08c5a1608c0d3e3b501904b67a1d67c0b63085e469d7dde!]

env:
  CIRRUS_VAULT_URL: https://vault.sonar.build:8200
  CIRRUS_VAULT_AUTH_PATH: jwt-cirrusci
  CIRRUS_VAULT_ROLE: cirrusci-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}

  ARTIFACTORY_URL: VAULT[development/kv/data/repox data.url]

  ARTIFACTORY_PRIVATE_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader
  ARTIFACTORY_PRIVATE_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  ARTIFACTORY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]

  # Deploy public artifact to artifactory
  ARTIFACTORY_DEPLOY_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer
  ARTIFACTORY_DEPLOY_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer access_token]
  ARTIFACTORY_DEPLOY_REPO: sonarsource-public-qa

  ORG_GRADLE_PROJECT_signingKey: VAULT[development/kv/data/sign data.key]
  ORG_GRADLE_PROJECT_signingPassword: VAULT[development/kv/data/sign data.passphrase]
  ORG_GRADLE_PROJECT_signingKeyId: 0x7DCD4258

  # burgr notification
  BURGR_URL: VAULT[development/kv/data/burgr data.url]
  BURGR_USERNAME: VAULT[development/kv/data/burgr data.cirrus_username]
  BURGR_PASSWORD: VAULT[development/kv/data/burgr data.cirrus_password]

  # Use bash (instead of sh on linux or cmd.exe on windows)
  CIRRUS_SHELL: bash

  GIT_SUB_MODULE: ""
  GRADLE_USER_HOME: ${CIRRUS_WORKING_DIR}/.gradle

linux_image_template: &LINUX_IMAGE
  image: eu.gcr.io/release-engineering-ci-prod/base:j11-latest
  cluster_name: cirrus-ci
  zone: europe-west4-b
  namespace: default
  use_in_memory_disk: true

linux_1_cpu_1G_template: &LINUX_1_CPU_1G
  gke_container:
    <<: *LINUX_IMAGE
    cpu: 1
    memory: 1G

linux_3_5_cpu_7G_template: &LINUX_3_5_CPU_7G
  gke_container:
    <<: *LINUX_IMAGE
    cpu: 3.5
    memory: 7G

linux_6_cpu_12G_template: &LINUX_6_CPU_12G
  gke_container:
    <<: *LINUX_IMAGE
    cpu: 6
    memory: 24G

windows_4_cpu_15G_template: &WINDOWS_4_CPU_15G
  gce_instance:
    image_project: release-engineering-ci-prod
    image_family: lt-base-windows-jdk11
    platform: windows
    zone: europe-west4-b
    preemptible: false
    # Note a standard "n1-standard-4" (4 cpu, 15GB) is cheaper than a custom { cpu: 4, memory: 8G }
    # see https://cloud.google.com/products/calculator/
    type: n1-standard-4
    # We don't need 128 GB but it's the only workaround we found to change disk performance
    # 128 => read/write 61MB/s https://cloud.google.com/compute/docs/disks/performance
    disk: 128
    use_ssd: true

setup_gradle_cache_template: &SETUP_GRADLE_CACHE
  gradle_cache:
     folder: .gradle/caches
  create_gradle_directory_script:
    - mkdir -p "${CIRRUS_WORKING_DIR}/.gradle"

cleanup_gradle_cache_script_template: &CLEANUP_GRADLE_CACHE_SCRIPT
  cleanup_gradle_script:
    - /usr/bin/find "${CIRRUS_WORKING_DIR}/.gradle/caches/" -name "*.lock" -type f -delete
    - rm -rf "${CIRRUS_WORKING_DIR}/.gradle/caches/4.10.2/"
    - rm -rf "${CIRRUS_WORKING_DIR}/.gradle/caches/journal-1/"
    - rm -rf "${CIRRUS_WORKING_DIR}/.gradle/caches/build-cache-1/"

gradle_its_template: &GRADLE_ITS_TEMPLATE
  <<: *SETUP_GRADLE_CACHE
  run_its_script:
    - |
      if [ -n "${GIT_SUB_MODULE}" ]; then
        git submodule update --init --depth 1 "${GIT_SUB_MODULE}"
      fi
    - source cirrus-env QA
    - ./gradlew "${GRADLE_TASK}" "-P${ITS_PROJECT}"
      "-Dsonar.runtimeVersion=${SQ_VERSION}"
      "-Dorchestrator.configUrl=https://repox.jfrog.io/repox/orchestrator.properties/orch-h2.properties"
      "-Dorchestrator.artifactory.accessToken=${ARTIFACTORY_ACCESS_TOKEN}"
      "-DbuildNumber=$BUILD_NUMBER"
      -Pqa --info --console plain --no-daemon --build-cache
  <<: *CLEANUP_GRADLE_CACHE_SCRIPT

kotlin_its_template: &KOTLIN_ITS_TEMPLATE
  <<: *SETUP_GRADLE_CACHE
  run_its_script:
    - |
      if [ -n "${GIT_SUB_MODULE}" ]; then
        git submodule update --init --depth 1 "${GIT_SUB_MODULE}"
      fi
    - source cirrus-env QA
    - bash ./ktor-java8.sh
    - ./gradlew "${GRADLE_TASK}" "-P${ITS_PROJECT}"
      "-Dsonar.runtimeVersion=${SQ_VERSION}"
      "-Dorchestrator.configUrl=https://repox.jfrog.io/repox/orchestrator.properties/orch-h2.properties"
      "-Dorchestrator.artifactory.accessToken=${ARTIFACTORY_ACCESS_TOKEN}"
      "-DbuildNumber=$BUILD_NUMBER"
      -Pqa --info --console plain --no-daemon --build-cache
  <<: *CLEANUP_GRADLE_CACHE_SCRIPT

only_if_sonarsource_qa_template: &ONLY_IF_SONARSOURCE_QA
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == "" && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*")

qa_task_filter_template: &QA_TASK_FILTER
  depends_on:
    - build
  <<: *ONLY_IF_SONARSOURCE_QA

build_task:
  <<: *LINUX_3_5_CPU_7G
  <<: *SETUP_GRADLE_CACHE
  env:
    # analysis on next
    SONAR_TOKEN: VAULT[development/kv/data/next data.token]
    SONAR_HOST_URL: https://next.sonarqube.com/sonarqube
    #allow deployment of pull request artifacts to repox
    DEPLOY_PULL_REQUEST: true
  build_script:
    - source cirrus-env BUILD-PRIVATE
    - regular_gradle_build_deploy_analyze
  <<: *CLEANUP_GRADLE_CACHE_SCRIPT

ws_scan_task:
  <<: *LINUX_3_5_CPU_7G
  <<: *SETUP_GRADLE_CACHE
  depends_on:
    - build
  # run only on master and long-term branches
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && ($CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*")
  env:
    WS_APIKEY: VAULT[development/kv/data/mend data.apikey]
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  whitesource_script:
    - source cirrus-env QA
    - ./gradlew clean build -x test
    - source ./export_ws_variables.sh
    - source ws_scan.sh
  allow_failures: "true"
  always:
    ws_artifacts:
      path: "whitesource/**/*"

# --- WARNING --- WARNING --- WARNING --- WARNING --- WARNING --- WARNING ---
# The following task names should all be included in promote_task/depends_on
# Burgr does not support task name length > 16, see:
# https://github.com/SonarSource/burgr/blob/c7678264f198818ea12800e2457c6557075c51ca/core/src/main/java/com/sonarsource/burgr/jsoninterface/CirrusStage.java#L79
# ---------------------------------------------------------------------------
qa_plug_pub_lin_task:
  <<: *QA_TASK_FILTER
  env:
    ITS_PROJECT: "plugin"
    GRADLE_TASK: ":its:plugin:test"
    matrix:
      - SQ_VERSION: "DEV"
      - SQ_VERSION: "LATEST_RELEASE[8.9]"
      - SQ_VERSION: "LATEST_RELEASE"
  <<: *LINUX_6_CPU_12G
  <<: *GRADLE_ITS_TEMPLATE

qa_plug_pub_win_task:
  <<: *QA_TASK_FILTER
  env:
    SQ_VERSION: LATEST_RELEASE[8.9]
    GRADLE_TASK: ":its:plugin:test"
    ITS_PROJECT: "plugin"
  <<: *WINDOWS_4_CPU_15G
  <<: *GRADLE_ITS_TEMPLATE

qa_ruling_kotlin_task:
  <<: *QA_TASK_FILTER
  env:
    SQ_VERSION: "LATEST_RELEASE"
    GRADLE_TASK: ":its:ruling:test"
    ITS_PROJECT: "ruling"
    GIT_SUB_MODULE: "its/sources"
  <<: *LINUX_6_CPU_12G
  <<: *KOTLIN_ITS_TEMPLATE

build_win_task:
  <<: *QA_TASK_FILTER
  <<: *WINDOWS_4_CPU_15G
  <<: *SETUP_GRADLE_CACHE
  build_script:
    - ./gradlew build -Pqa --info --console plain --no-daemon --build-cache
  <<: *CLEANUP_GRADLE_CACHE_SCRIPT

promote_task:
  depends_on:
    - build
    - qa_plug_pub_lin
    - qa_plug_pub_win
    - qa_ruling_kotlin
    - build_win
    - ws_scan
  <<: *ONLY_IF_SONARSOURCE_QA
  <<: *LINUX_1_CPU_1G
  env:
    #promotion cloud function
    GCF_ACCESS_TOKEN: VAULT[development/kv/data/promote data.token]
    PROMOTE_URL: VAULT[development/kv/data/promote data.url]
    #artifacts that will have downloadable links in burgr
    ARTIFACTS: "\
      org.sonarsource.kotlin:sonar-kotlin-plugin:jar"
  script:
    - source cirrus-env PROMOTE
    - curl -sfSL -H "Authorization: Bearer $GCF_ACCESS_TOKEN" "$PROMOTE_URL/$GITHUB_REPO/$GITHUB_BRANCH/$BUILD_NUMBER/$PULL_REQUEST?multi=true"
    - burgr-notify-promotion
