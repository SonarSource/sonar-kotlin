[
  {
    "key": "AaptCrash",
    "name": "Potential AAPT crash",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nDefining a style which sets android:id to a dynamically generated id can cause\nmany versions of aapt, the resource packaging tool, to crash. To work around\nthis, declare the id explicitly with &lt;item type=&quot;id&quot; name=&quot;...&quot; /&gt; instead.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "AcceptsUserCertificates",
    "name": "Allowing User Certificates",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAllowing user certificates could allow eavesdroppers to intercept data sent by\nyour app, 'which could impact the privacy of your users. Consider nesting your\napp's trust-anchors inside a &lt;debug-overrides&gt; element to make sure they are\nonly available when android:debuggable is set to &quot;true&quot;.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/articles/security-config#TrustingDebugCa\">https://developer.android.com/training/articles/security-config#TrustingDebugCa</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AccidentalOctal",
    "name": "Accidental Octal",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn Groovy, an integer literal that starts with a leading 0 will be interpreted\nas an octal number. That is usually (always?) an accident and can lead to\nsubtle bugs, for example when used in the versionCode of an app.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AdapterViewChildren",
    "name": "AdapterView cannot have children in XML",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAn AdapterView such as a `ListView`s must be configured with data from Java\ncode, such as a ListAdapter.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/android/widget/AdapterView.html\">https://developer.android.com/reference/android/widget/AdapterView.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AddJavascriptInterface",
    "name": "addJavascriptInterface Called",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFor applications built for API levels below 17, WebView#addJavascriptInterface\npresents a security hazard as JavaScript on the target web page has the\nability to use reflection to access the injected object's public fields and\nthus manipulate the host application in unintended ways.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object,%20java.lang.String)\">https://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object,%20java.lang.String)</a><br />\nhttps://support.google.com/faqs/answer/9095419?hl=en\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AllCaps",
    "name": "Combining textAllCaps and markup",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe textAllCaps text transform will end up calling toString on the\nCharSequence, which has the net effect of removing any markup such as &lt;b&gt;.\nThis check looks for usages of strings containing markup that also specify\ntextAllCaps=true.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AllowAllHostnameVerifier",
    "name": "Insecure HostnameVerifier",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check looks for use of HostnameVerifier implementations whose verify\nmethod always returns true (thus trusting any hostname) which could result in\ninsecure network traffic caused by trusting arbitrary hostnames in TLS/SSL\ncertificates presented by peers.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AlwaysShowAction",
    "name": "Usage of showAsAction=always",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsing showAsAction=&quot;always&quot; in menu XML, or MenuItem.SHOW_AS_ACTION_ALWAYS in\nJava code is usually a deviation from the user interface style guide.Use\nifRoom or the corresponding MenuItem.SHOW_AS_ACTION_IF_ROOM instead.\n</p>\n<p>\nIf always is used sparingly there are usually no problems and behavior is\nroughly equivalent to ifRoom but with preference over other ifRoom items.\nUsing it more than twice in the same menu is a bad idea.\n</p>\n<p>\nThis check looks for menu XML files that contain more than two always actions,\nor some always actions and no ifRoom actions. In Java code, it looks for\nprojects that contain references to MenuItem.SHOW_AS_ACTION_ALWAYS and no\nreferences to MenuItem.SHOW_AS_ACTION_IF_ROOM.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AndroidGradlePluginVersion",
    "name": "Obsolete Android Gradle Plugin Version",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis detector looks for usage of the Android Gradle Plugin where the version\nyou are using is not the current stable release. Using older versions is fine,\nand there are cases where you deliberately want to stick with an older\nversion. However, you may simply not be aware that a more recent version is\navailable, and that is what this lint check helps find.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AnimatorKeep",
    "name": "Missing @Keep for Animated Properties",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen you use property animators, properties can be accessed via reflection.\nThose methods should be annotated with @Keep to ensure that during release\nbuilds, the methods are not potentially treated as unused and removed, or\ntreated as internal only and get renamed to something shorter.\n</p>\n<p>\nThis check will also flag other potential reflection problems it encounters,\nsuch as a missing property, wrong argument types, etc.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AnnotateVersionCheck",
    "name": "Annotate SDK_INT checks",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nMethods which perform SDK_INT version checks (or field constants which reflect\nthe result of a version check) in libraries should be annotated with\n@ChecksSdkIntAtLeast. This makes it possible for lint to correctly check calls\ninto the library later to correctly understand that problematic code which is\nwrapped within a call into this library is safe after all.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AnnotationProcessorOnCompilePath",
    "name": "Annotation Processor on Compile Classpath",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis dependency is identified as an annotation processor. Consider adding it\nto the processor path using annotationProcessor instead of including it to the\ncompile path.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AppBundleLocaleChanges",
    "name": "App Bundle handling of runtime locale changes",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen changing locales at runtime (e.g. to provide an in-app language\nswitcher), the Android App Bundle must be configured to not split by locale or\nthe Play Core library must be used to download additional locales at runtime.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/app-bundle/configure-base#handling_language_changes\">https://developer.android.com/guide/app-bundle/configure-base#handling_language_changes</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AppCompatCustomView",
    "name": "Appcompat Custom Widgets",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn order to support features such as tinting, the appcompat library will\nautomatically load special appcompat replacements for the builtin widgets.\nHowever, this does not work for your own custom views.\n</p>\n<p>\nInstead of extending the android.widget classes directly, you should instead\nextend one of the delegate classes in\nandroidx.appcompat.widget.AppCompatTextView.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AppCompatMethod",
    "name": "Using Wrong AppCompat Method",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen using the appcompat library, there are some methods you should be calling\ninstead of the normal ones; for example, getSupportActionBar() instead of\ngetActionBar(). This lint check looks for calls to the wrong method.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/topic/libraries/support-library/\">https://developer.android.com/topic/libraries/support-library/</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AppCompatResource",
    "name": "Menu namespace",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen using the appcompat library, menu resources should refer to the\nshowAsAction (or actionViewClass, or actionProviderClass) in the app:<br />\nnamespace, not the android: namespace.\n</p>\n<p>\nSimilarly, when not using the appcompat library, you should be using the\nandroid:showAsAction (or actionViewClass, or actionProviderClass) attribute.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AppIndexingService",
    "name": "App Indexing Background Services",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nApps targeting Android 8.0 or higher can no longer rely on background services\nwhile listening for updates to the on-device index. Use a BroadcastReceiver\nfor the UPDATE_INDEX intent to continue supporting indexing in your app.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://firebase.google.com/docs/app-indexing/android/personal-content#add-a-broadcast-receiver-to-your-app\">https://firebase.google.com/docs/app-indexing/android/personal-content#add-a-broadcast-receiver-to-your-app</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AppLinkUrlError",
    "name": "URL not supported by app for Firebase App Indexing",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nEnsure the URL is supported by your app, to get installs and traffic to your\napp from Google Search.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://g.co/AppIndexing/AndroidStudio\">https://g.co/AppIndexing/AndroidStudio</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AppLinksAutoVerify",
    "name": "App Links Auto Verification Failure",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable AppLinksAutoVerify\n</p>\n<p>\nEnsures that app links are correctly set and associated with website.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://g.co/appindexing/applinks\">https://g.co/appindexing/applinks</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ApplySharedPref",
    "name": "Use apply() on SharedPreferences",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nConsider using apply() instead of commit on shared preferences. Whereas commit\nblocks and writes its data to persistent storage immediately, apply will\nhandle it in the background.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AssertionSideEffect",
    "name": "Assertions with Side Effects",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAssertion conditions can have side effects. This is risky because the behavior\ndepends on whether assertions are on or off. This is usually not intentional,\nand can lead to bugs where the production version differs from the version\ntested during development.\n</p>\n<p>\nGenerally, you'll want to perform the operation with the side effect before\nthe assertion, and then assert that the result was what you expected.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "AuthLeak",
    "name": "Code might contain an auth leak",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nStrings in java apps can be discovered by decompiling apps, this lint check\nlooks for code which looks like it may contain an url with a username and\npassword\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Autofill",
    "name": "Use Autofill",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSpecify an autofillHints attribute when targeting SDK version 26 or higher or\nexplicitly specify that the view is not important for autofill. Your app can\nhelp an autofill service classify the data correctly by providing the meaning\nof each view that could be autofillable, such as views representing usernames,\npasswords, credit card fields, email addresses, etc.\n</p>\n<p>\nThe hints can have any value, but it is recommended to use predefined values\nlike 'username' for a username or 'creditCardNumber' for a credit card number.\nFor a list of all predefined autofill hint constants, see the AUTOFILL_HINT_\nconstants in the View reference at\nhttps://developer.android.com/reference/android/view/View.html.\n</p>\n<p>\nYou can mark a view unimportant for autofill by specifying an\nimportantForAutofill attribute on that view or a parent view. See\nhttps://developer.android.com/reference/android/view/View.html#setImportantFor\nAutofill(int).\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/text/autofill.html\">https://developer.android.com/guide/topics/text/autofill.html</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "BackButton",
    "name": "Back button",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable BackButton\n</p>\n<p>\nAccording to the Android Design Guide,\n</p>\n<p>\n&quot;Other platforms use an explicit back button with label to allow the user to\nnavigate up the application's hierarchy. Instead, Android uses the main action\nbar's app icon for hierarchical navigation and the navigation bar's back\nbutton for temporal navigation.&quot;\n</p>\n<p>\nThis check is not very sophisticated (it just looks for buttons with the label\n&quot;Back&quot;), so it is disabled by default to not trigger on common scenarios like\npairs of Back/Next buttons to paginate through screens.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://material.io/design/\">https://material.io/design/</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "BadHostnameVerifier",
    "name": "Insecure HostnameVerifier",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check looks for implementations of HostnameVerifier whose verify method\nalways returns true (thus trusting any hostname) which could result in\ninsecure network traffic caused by trusting arbitrary hostnames in TLS/SSL\ncertificates presented by peers.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "BatteryLife",
    "name": "Battery Life Issues",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis issue flags code that either\n* negatively affects battery life, or\n* uses APIs that have recently changed behavior to prevent background tasks\nfrom consuming memory and battery excessively.\n</p>\n<p>\nGenerally, you should be using WorkManager instead.\n</p>\n<p>\nFor more details on how to update your code, please see\nhttps://developer.android.com/topic/performance/background-optimization\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/topic/performance/background-optimization\">https://developer.android.com/topic/performance/background-optimization</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "BidiSpoofing",
    "name": "Bidirectional text spoofing",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUnicode bidirectional text characters can alter the order in which the\ncompiler processes tokens. However, this can also be used to hide malicious\ncode, and can be difficult to spot. This lint check audits the source code and\nlooks for cases where it looks like bidirectional text has the potential to be\nmisleading.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://krebsonsecurity.com/2021/11/trojan-source-bug-threatens-the-security-of-all-code/\">https://krebsonsecurity.com/2021/11/trojan-source-bug-threatens-the-security-of-all-code/</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "BlockedPrivateApi",
    "name": "Using Blocked Private API",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsage of restricted non-SDK interface is forbidden for this targetSDK.\nAccessing non-SDK methods or fields through reflection has a high likelihood\nto break your app between versions, and is being restricted to facilitate\nfuture app compatibility.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/preview/restrictions-non-sdk-interfaces\">https://developer.android.com/preview/restrictions-non-sdk-interfaces</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "BottomAppBar",
    "name": "BottomAppBar Problems",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe BottomAppBar widget must be placed within a CoordinatorLayout.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "BrokenIterator",
    "name": "Broken Iterator",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFor LinkedHashMap:<br />\n</p>\n<p>\nThe spliterators returned by LinkedHashMap in Android Nougat (API levels 24\nand 25) use the wrong order (inconsistent with the iterators, which use the\ncorrect order), despite reporting Spliterator.ORDERED. You may use the\nfollowing code fragments to obtain a correctly ordered Spliterator on API\nlevel 24 and 25:<br />\n</p>\n<p>\nFor a Collection view c = lhm.entrySet(), c = lhm.keySet() or c =\nlhm.values(), use java.util.Spliterators.spliterator(c,\nc.spliterator().characteristics()) instead of c.spliterator().\n</p>\n<p>\nInstead of c.stream() or c.parallelStream(), use\njava.util.stream.StreamSupport.stream(spliterator, false) to construct a\n(nonparallel) Stream from such a Spliterator.\n</p>\n<p>\nFor Vector:<br />\n</p>\n<p>\nThe listIterator() returned for a Vector has a broken add() implementation on\nAndroid N (API level 24). Consider switching to ArrayList and if necessary\nadding synchronization.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/java/util/LinkedHashMap\">https://developer.android.com/reference/java/util/LinkedHashMap</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ButtonCase",
    "name": "Cancel/OK dialog button capitalization",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe standard capitalization for OK/Cancel dialogs is &quot;OK&quot; and &quot;Cancel&quot;. To\nensure that your dialogs use the standard strings, you can use the resource\nstrings @android:string/ok and @android:string/cancel.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ButtonOrder",
    "name": "Button order",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAccording to the Android Design Guide,\n</p>\n<p>\n&quot;Action buttons are typically Cancel and/or OK, with OK indicating the\npreferred or most likely action. However, if the options consist of specific\nactions such as Close or Wait rather than a confirmation or cancellation of\nthe action described in the content, then all the buttons should be active\nverbs. As a rule, the dismissive action of a dialog is always on the left\nwhereas the affirmative actions are on the right.&quot;\n</p>\n<p>\nThis check looks for button bars and buttons which look like cancel buttons,\nand makes sure that these are on the left.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://material.io/components/dialogs/\">https://material.io/components/dialogs/</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ButtonStyle",
    "name": "Button should be borderless",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nButton bars typically use a borderless style for the buttons. Set the\nstyle=&quot;?android:attr/buttonBarButtonStyle&quot; attribute on each of the buttons,\nand set style=&quot;?android:attr/buttonBarStyle&quot; on the parent layout\n</p>\n<p>\nMore information: <br />\n<a href=\"https://material.io/components/dialogs/\">https://material.io/components/dialogs/</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ByteOrderMark",
    "name": "Byte order mark inside files",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nLint will flag any byte-order-mark (BOM) characters it finds in the middle of\na file. Since we expect files to be encoded with UTF-8 (see the EnforceUTF8\nissue), the BOM characters are not necessary, and they are not handled\ncorrectly by all tools. For example, if you have a BOM as part of a resource\nname in one particular translation, that name will not be considered identical\nto the base resource's name and the translation will not be used.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://en.wikipedia.org/wiki/Byte_order_mark\">https://en.wikipedia.org/wiki/Byte_order_mark</a><br />\n</p>\n",
    "tags": [
      "i18n",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "CanvasSize",
    "name": "Wrong Canvas Size",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn a custom view's draw implementation, you should normally call getWidth and\ngetHeight on the custom view itself, not on the canvas instance.\n</p>\n<p>\nCanvas width and height are the width and height of the Canvas, which is not\nalways the same as size of the view.\n</p>\n<p>\nIn the hardware accelerated path the width and height of the canvas typically\nalways match that of the View because every view goes to its own recorded\nDisplayList. But in software rendering there's just one canvas that is clipped\nand transformed as it makes its way through the View tree, and otherwise\nremains the same Canvas object for every View's draw method.\n</p>\n<p>\nYou should only use Canvas state to adjust how much you draw, such as a\nquick-reject for early work avoidance if it's going to be clipped away, but\nnot what you draw.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "CheckResult",
    "name": "Ignoring results",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSome methods have no side effects, and calling them without doing something\nwithout the result is suspicious.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ClickableViewAccessibility",
    "name": "Accessibility in Custom Views",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf a View that overrides onTouchEvent or uses an OnTouchListener does not also\nimplement performClick and call it when clicks are detected, the View may not\nhandle accessibility actions properly. Logic handling the click actions should\nideally be placed in View#performClick as some accessibility services invoke\nperformClick when a click action should occur.\n</p>\n<p>\n</p>\n",
    "tags": [
      "accessibility",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "CoarseFineLocation",
    "name": "Cannot use ACCESS_FINE_LOCATION without ACCESS_COARSE_LOCATION",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf your app requires access to FINE location, on Android 12 and higher you\nmust now request both FINE and COARSE. Users will have the option to grant\nonly COARSE location. Ensure your app can work with just COARSE location.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "CommitPrefEdits",
    "name": "Missing commit() on SharedPreference editor",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAfter calling edit() on a SharedPreference, you must call commit() or apply()\non the editor to save the results.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "CommitTransaction",
    "name": "Missing commit() calls",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAfter creating a FragmentTransaction, you typically need to commit it as well\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ConstantLocale",
    "name": "Constant Locale",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAssigning Locale.getDefault() to a constant is suspicious, because the locale\ncan change while the app is running.\n</p>\n<p>\n</p>\n",
    "tags": [
      "i18n",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ContentDescription",
    "name": "Image without contentDescription",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nNon-textual widgets like ImageViews and ImageButtons should use the\ncontentDescription attribute to specify a textual description of the widget\nsuch that screen readers and other accessibility tools can adequately describe\nthe user interface.\n</p>\n<p>\nNote that elements in application screens that are purely decorative and do\nnot provide any content or enable a user action should not have accessibility\ncontent descriptions. In this case, just suppress the lint warning with a\ntools:ignore=&quot;ContentDescription&quot; attribute.\n</p>\n<p>\nNote that for text fields, you should not set both the hint and the\ncontentDescription attributes since the hint will never be shown. Just set the\nhint.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases\">https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases</a><br />\n</p>\n",
    "tags": [
      "accessibility",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ConvertToWebp",
    "name": "Convert to WebP",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable ConvertToWebp\n</p>\n<p>\nThe WebP format is typically more compact than PNG and JPEG. As of Android\n4.2.1 it supports transparency and lossless conversion as well. Note that\nthere is a quickfix in the IDE which lets you perform conversion.\n</p>\n<p>\nPreviously, launcher icons were required to be in the PNG format but that\nrestriction is no longer there, so lint now flags these.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "CustomSplashScreen",
    "name": "Application-defined Launch Screen",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nStarting in Android 12 (API 31+), the application's Launch Screen is provided\nby the system and the application should not create its own, otherwise the\nuser will see two splashscreen. Please check the SplashScreen class to check\nhow the Splash Screen can be controlled and customized.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "CustomViewStyleable",
    "name": "Mismatched Styleable/Custom View Name",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe convention for custom views is to use a declare-styleable whose name\nmatches the custom view class name. The IDE relies on this convention such\nthat for example code completion can be offered for attributes in a custom\nview in layout XML resource files.\n</p>\n<p>\n(Similarly, layout parameter classes should use the suffix _Layout.)\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "CustomX509TrustManager",
    "name": "Implements custom TLS trust manager",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check looks for custom X509TrustManager implementations.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "CutPasteId",
    "name": "Likely cut & paste mistakes",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis lint check looks for cases where you have cut &amp; pasted calls to\nfindViewById but have forgotten to update the R.id field. It's possible that\nyour code is simply (redundantly) looking up the field repeatedly, but lint\ncannot distinguish that from a case where you for example want to initialize\nfields prev and next and you cut &amp; pasted findViewById(R.id.prev) and forgot\nto update the second initialization to R.id.next.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DalvikOverride",
    "name": "Method considered overridden by Dalvik",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable DalvikOverride\n</p>\n<p>\nThe Dalvik virtual machine will treat a package private method in one class as\noverriding a package private method in its super class, even if they are in\nseparate packages.\n</p>\n<p>\nIf you really did intend for this method to override the other, make the\nmethod protected instead.\n</p>\n<p>\nIf you did not intend the override, consider making the method private, or\nchanging its name or signature.\n</p>\n<p>\nNote that this check is disabled be default, because ART (the successor to\nDalvik) no longer has this behavior.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DataBindingWithoutKapt",
    "name": "Data Binding without Annotation Processing",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nApps that use Kotlin and data binding should also apply the kotlin-kapt\nplugin.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://kotlinlang.org/docs/reference/kapt.html\">https://kotlinlang.org/docs/reference/kapt.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DataExtractionRules",
    "name": "Missing data extraction rules",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nBefore Android 12, the attributes android:allowBackup and\nandroid:fullBackupContent were used to configure all forms of backup,\nincluding cloud backups, device-to-device transfers and adb backup.\n</p>\n<p>\nIn Android 12 and higher, these attributes have been deprecated and will only\napply to cloud backups. You should instead use the attribute\nandroid:dataExtractionRules, specifying an @xml resource that configures which\nfiles to back up, for cloud backups and for device-to-device transfers,\nseparately. If your minSdkVersion supports older versions, you'll still want\nto specify an android:fullBackupContent resource if the default behavior is\nnot right for your app.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/about/versions/12/backup-restore#xml-changes\">https://developer.android.com/about/versions/12/backup-restore#xml-changes</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DefaultEncoding",
    "name": "Using Default Character Encoding",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable DefaultEncoding\n</p>\n<p>\nSome APIs will implicitly use the default system character encoding instead of\nUTF-8 when converting to or from bytes, such as when creating a default\nFileReader.\n</p>\n<p>\nThis is usually not correct; you only want to do this if you need to read\nfiles created by other programs where they have deliberately written in the\nsame encoding. The default encoding varies from platform to platform and can\nvary from locale to locale, so this makes it difficult to interpret files\ncontaining non-ASCII characters.\n</p>\n<p>\nWe recommend using UTF-8 everywhere.\n</p>\n<p>\nNote that on Android, the default file encoding is always UTF-8 (see\nhttps://developer.android.com/reference/java/nio/charset/Charset#defaultCharse\nt() for more), so this lint check deliberately does not flag any problems in\nAndroid code, since it is always safe to rely on the default character\nencoding there.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DefaultLocale",
    "name": "Implied default locale in case conversion",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nCalling String#toLowerCase() or #toUpperCase() without specifying an explicit\nlocale is a common source of bugs. The reason for that is that those methods\nwill use the current locale on the user's device, and even though the code\nappears to work correctly when you are developing the app, it will fail in\nsome locales. For example, in the Turkish locale, the uppercase replacement\nfor i is not I.\n</p>\n<p>\nIf you want the methods to just perform ASCII replacement, for example to\nconvert an enum name, call String#toUpperCase(Locale.US) instead. If you\nreally want to use the current locale, call\nString#toUpperCase(Locale.getDefault()) instead.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/java/util/Locale.html#default_locale\">https://developer.android.com/reference/java/util/Locale.html#default_locale</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DeletedProvider",
    "name": "Using Deleted Provider",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe Crypto provider has been completely removed in Android P (and was\ndeprecated in an earlier release). This means that the code will throw a\nNoSuchProviderException and the app will crash. Even if the code catches that\nexception at a higher level, this is not secure and should not be used.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html\">https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Deprecated",
    "name": "Using deprecated resources",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nDeprecated views, attributes and so on are deprecated because there is a\nbetter way to do something. Do it that new way. You've been warned.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DeprecatedProvider",
    "name": "Using BC Provider",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe BC provider has been deprecated and will not be provided when\ntargetSdkVersion is P or higher.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html\">https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DeprecatedSinceApi",
    "name": "Using a method deprecated in earlier SDK",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSome backport methods are only necessary until a specific version of Android.\nThese have been annotated with @DeprecatedSinceApi, specifying the relevant\nAPI level and replacement suggestions. Calling these methods when the\nminSdkVersion is already at the deprecated API level or above is unnecessary.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DevModeObsolete",
    "name": "Dev Mode Obsolete",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn the past, our documentation recommended creating a dev product flavor with\nhas a minSdkVersion of 21, in order to enable multidexing to speed up builds\nsignificantly during development.\n</p>\n<p>\nThat workaround is no longer necessary, and it has some serious downsides,\nsuch as breaking API access checking (since the true minSdkVersion is no\nlonger known).\n</p>\n<p>\nIn recent versions of the IDE and the Gradle plugin, the IDE automatically\npasses the API level of the connected device used for deployment, and if that\ndevice is at least API 21, then multidexing is automatically turned on,\nmeaning that you get the same speed benefits as the dev product flavor but\nwithout the downsides.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DeviceAdmin",
    "name": "Malformed Device Admin",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf you register a broadcast receiver which acts as a device admin, you must\nalso register an &lt;intent-filter&gt; for the action\nandroid.app.action.DEVICE_ADMIN_ENABLED, without any &lt;data&gt;, such that the\ndevice admin can be activated/deactivated.\n</p>\n<p>\nTo do this, add\n`&lt;intent-filter&gt;`\n    `&lt;action android:name=&quot;android.app.action.DEVICE_ADMIN_ENABLED&quot; /&gt;`\n`&lt;/intent-filter&gt;`\nto your &lt;receiver&gt;.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DiffUtilEquals",
    "name": "Suspicious DiffUtil Equality",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nareContentsTheSame is used by DiffUtil to produce diffs. If the method is\nimplemented incorrectly, such as using identity equals instead of equals, or\ncalling equals on a class that has not implemented it, weird visual artifacts\ncan occur.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://issuetracker.google.com/116789824\">https://issuetracker.google.com/116789824</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DisableBaselineAlignment",
    "name": "Missing baselineAligned attribute",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen a LinearLayout is used to distribute the space proportionally between\nnested layouts, the baseline alignment property should be turned off to make\nthe layout computation faster.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DiscouragedApi",
    "name": "Using discouraged APIs",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nDiscouraged APIs are allowed and are not deprecated, but they may be unfit for\ncommon use (e.g. due to slow performance or subtle behavior).\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DiscouragedPrivateApi",
    "name": "Using Discouraged Private API",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsage of restricted non-SDK interface may throw an exception at runtime.\nAccessing non-SDK methods or fields through reflection has a high likelihood\nto break your app between versions, and is being restricted to facilitate\nfuture app compatibility.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/preview/restrictions-non-sdk-interfaces\">https://developer.android.com/preview/restrictions-non-sdk-interfaces</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DrawAllocation",
    "name": "Memory allocations within drawing code",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYou should avoid allocating objects during a drawing or layout operation.\nThese are called frequently, so a smooth UI can be interrupted by garbage\ncollection pauses caused by the object allocations.\n</p>\n<p>\nThe way this is generally handled is to allocate the needed objects up front\nand to reuse them for each drawing operation.\n</p>\n<p>\nSome methods allocate memory on your behalf (such as Bitmap.create), and these\nshould be handled in the same way.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DuplicateActivity",
    "name": "Activity registered more than once",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAn activity should only be registered once in the manifest. If it is\naccidentally registered more than once, then subtle errors can occur, since\nattribute declarations from the two elements are not merged, so you may\naccidentally remove previous declarations.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "DuplicateDefinition",
    "name": "Duplicate definitions of resources",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYou can define a resource multiple times in different resource folders; that's\nhow string translations are done, for example. However, defining the same\nresource more than once in the same resource folder is likely an error, for\nexample attempting to add a new resource without realizing that the name is\nalready used, and so on.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DuplicateDivider",
    "name": "Unnecessary Divider Copy",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nOlder versions of the RecyclerView library did not include a divider\ndecorator, but one was provided as a sample in the support demos. This divider\nclass has been widely copy/pasted into various projects.\n</p>\n<p>\nIn recent versions of the support library, the divider decorator is now\nincluded, so you can replace custom copies with the &quot;built-in&quot; version,\nandroid.support.v7.widget.DividerItemDecoration.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DuplicateIds",
    "name": "Duplicate ids within a single layout",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWithin a layout, id's should be unique since otherwise findViewById() can\nreturn an unexpected view.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "DuplicateIncludedIds",
    "name": "Duplicate ids across layouts combined with include tags",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIt's okay for two independent layouts to use the same ids. However, if layouts\nare combined with include tags, then the id's need to be unique within any\nchain of included layouts, or Activity#findViewById() can return an unexpected\nview.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DuplicatePlatformClasses",
    "name": "Duplicate Platform Classes",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThere are a number of libraries that duplicate not just functionality of the\nAndroid platform but using the exact same class names as the ones provided in\nAndroid -- for example the apache http classes. This can lead to unexpected\ncrashes.\n</p>\n<p>\nTo solve this, you need to either find a newer version of the library which no\nlonger has this problem, or to repackage the library (and all of its\ndependencies) using something like the jarjar tool, or finally, rewriting the\ncode to use different APIs (for example, for http code, consider using\nHttpUrlConnection or a library like okhttp).\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "DuplicateStrings",
    "name": "Duplicate Strings",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable DuplicateStrings\n</p>\n<p>\nDuplicate strings can make applications larger unnecessarily.\n</p>\n<p>\nThis lint check looks for duplicate strings, including differences for strings\nwhere the only difference is in capitalization. Title casing and all uppercase\ncan all be adjusted in the layout or in code.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/android/widget/TextView.html#attr_android:inputType\">https://developer.android.com/reference/android/widget/TextView.html#attr_android:inputType</a><br />\n</p>\n<p>\nUsability:Typography\n====================\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "DuplicateUsesFeature",
    "name": "Feature declared more than once",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nA given feature should only be declared once in the manifest.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "EasterEgg",
    "name": "Code contains easter egg",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable EasterEgg\n</p>\n<p>\nAn &quot;easter egg&quot; is code deliberately hidden in the code, both from potential\nusers and even from other developers. This lint check looks for code which\nlooks like it may be hidden from sight.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "EllipsizeMaxLines",
    "name": "Combining Ellipsize and Maxlines",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nCombining ellipsize and maxLines=1 can lead to crashes on some devices.\nEarlier versions of lint recommended replacing singleLine=true with maxLines=1\nbut that should not be done when using ellipsize.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://issuetracker.google.com/issues/36950033\">https://issuetracker.google.com/issues/36950033</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "EmptySuperCall",
    "name": "Calling an empty super method",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFor methods annotated with @EmptySuper, overriding methods should not also\ncall the super implementation, either because it is empty, or perhaps it\ncontains code not intended to be run when the method is overridden.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "EnforceUTF8",
    "name": "Encoding used in resource files is not UTF-8",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nXML supports encoding in a wide variety of character sets. However, not all\ntools handle the XML encoding attribute correctly, and nearly all Android apps\nuse UTF-8, so by using UTF-8 you can protect yourself against subtle bugs when\nusing non-ASCII characters.\n</p>\n<p>\nIn particular, the Android Gradle build system will merge resource XML files\nassuming the resource files are using UTF-8 encoding.\n</p>\n<p>\n</p>\n",
    "tags": [
      "i18n",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "EnqueueWork",
    "name": "WorkManager Enqueue",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWorkContinuations cannot be enqueued automatically.  You must call enqueue()\non a WorkContinuation to have it and its parent continuations enqueued inside\nWorkManager.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ExifInterface",
    "name": "Using android.media.ExifInterface",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe android.media.ExifInterface implementation has some known security bugs in\nolder versions of Android. There is a new implementation available of this\nlibrary in the support library, which is preferable.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ExpensiveAssertion",
    "name": "Expensive Assertions",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable ExpensiveAssertion\n</p>\n<p>\nIn Kotlin, assertions are not handled the same way as from the Java\nprogramming language. In particular, they're just implemented as a library\ncall, and inside the library call the error is only thrown if assertions are\nenabled.\n</p>\n<p>\nThis means that the arguments to the assert call will always be evaluated. If\nyou're doing any computation in the expression being asserted, that\ncomputation will unconditionally be performed whether or not assertions are\nturned on. This typically turns into wasted work in release builds.\n</p>\n<p>\nThis check looks for cases where the assertion condition is nontrivial, e.g.\nit is performing method calls or doing more work than simple comparisons on\nlocal variables or fields.\n</p>\n<p>\nYou can work around this by writing your own inline assert method instead:<br />\n</p>\n<p>\n@Suppress(&quot;INVISIBLE_REFERENCE&quot;, &quot;INVISIBLE_MEMBER&quot;)\ninline fun assert(condition: () -&gt; Boolean) {\n    if (_Assertions.ENABLED &amp;&amp; !condition()) {\n        throw AssertionError()\n    }\n}\n</p>\n<p>\nIn Android, because assertions are not enforced at runtime, instead use this:<br />\n</p>\n<p>\ninline fun assert(condition: () -&gt; Boolean) {\n    if (BuildConfig.DEBUG &amp;&amp; !condition()) {\n        throw AssertionError()\n    }\n}\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ExpiredTargetSdkVersion",
    "name": "TargetSdkVersion No Longer Supported",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAs of the second half of 2018, Google Play requires that new apps and app\nupdates target API level 26 or higher.\n</p>\n<p>\nConfiguring your app to target a recent API level ensures that users benefit\nfrom significant security and performance improvements, while still allowing\nyour app to run on older Android versions (down to the minSdkVersion).\n</p>\n<p>\nTo update your targetSdkVersion, follow the steps from &quot;Meeting Google Play\nrequirements for target API level&quot;,\nhttps://developer.android.com/distribute/best-practices/develop/target-sdk.htm\nl\n</p>\n<p>\nMore information: <br />\n<a href=\"https://support.google.com/googleplay/android-developer/answer/113469#targetsdk\">https://support.google.com/googleplay/android-developer/answer/113469#targetsdk</a><br />\nhttps://developer.android.com/distribute/best-practices/develop/target-sdk.html\n</p>\n",
    "tags": [
      "compliance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "ExpiringTargetSdkVersion",
    "name": "TargetSdkVersion Soon Expiring",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn the second half of 2018, Google Play will require that new apps and app\nupdates target API level 26 or higher. This will be required for new apps in\nAugust 2018, and for updates to existing apps in November 2018.\n</p>\n<p>\nConfiguring your app to target a recent API level ensures that users benefit\nfrom significant security and performance improvements, while still allowing\nyour app to run on older Android versions (down to the minSdkVersion).\n</p>\n<p>\nThis lint check starts warning you some months before these changes go into\neffect if your targetSdkVersion is 25 or lower. This is intended to give you a\nheads up to update your app, since depending on your current targetSdkVersion\nthe work can be nontrivial.\n</p>\n<p>\nTo update your targetSdkVersion, follow the steps from &quot;Meeting Google Play\nrequirements for target API level&quot;,\nhttps://developer.android.com/distribute/best-practices/develop/target-sdk.htm\nl\n</p>\n<p>\nMore information: <br />\n<a href=\"https://support.google.com/googleplay/android-developer/answer/113469#targetsdk\">https://support.google.com/googleplay/android-developer/answer/113469#targetsdk</a><br />\nhttps://developer.android.com/distribute/best-practices/develop/target-sdk.html\n</p>\n",
    "tags": [
      "compliance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ExportedContentProvider",
    "name": "Content provider does not require permission",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nContent providers are exported by default and any application on the system\ncan potentially use them to read and write data. If the content provider\nprovides access to sensitive data, it should be protected by specifying\nexport=false in the manifest or by protecting it with a permission that can be\ngranted to other applications.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ExportedPreferenceActivity",
    "name": "PreferenceActivity should not be exported",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFragment injection gives anyone who can send your PreferenceActivity an intent\nthe ability to load any fragment, with any arguments, in your process.\n</p>\n<p>\nMore information: <br />\n<a href=\"http://securityintelligence.com/new-vulnerability-android-framework-fragment-injection\">http://securityintelligence.com/new-vulnerability-android-framework-fragment-injection</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ExportedReceiver",
    "name": "Receiver does not require permission",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nExported receivers (receivers which either set exported=true or contain an\nintent-filter and do not specify exported=false) should define a permission\nthat an entity must have in order to launch the receiver or bind to it.\nWithout this, any application can use this receiver.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ExportedService",
    "name": "Exported service does not require permission",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nExported services (services which either set exported=true or contain an\nintent-filter and do not specify exported=false) should define a permission\nthat an entity must have in order to launch the service or bind to it. Without\nthis, any application can use this service.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ExtraText",
    "name": "Extraneous text in resource files",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nNon-value resource files should only contain elements and attributes. Any XML\ntext content found in the file is likely accidental (and potentially dangerous\nif the text resembles XML and the developer believes the text to be\nfunctional).\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ExtraTranslation",
    "name": "Extra translation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf a string appears in a specific language translation file, but there is no\ncorresponding string in the default locale, then this string is probably\nunused. (It's technically possible that your application is only intended to\nrun in a specific locale, but it's still a good idea to provide a fallback.)\n</p>\n<p>\nNote that these strings can lead to crashes if the string is looked up on any\nlocale not providing a translation, so it's important to clean them up.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "FileEndsWithExt",
    "name": "File endsWith on file extensions",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe Kotlin extension method File.endsWith(suffix) checks whole path\ncomponents, not just string suffixes. This means that\nFile(&quot;foo.txt&quot;).endsWith(&quot;.txt&quot;) will return false. Instead you might have\nintended file.path.endsWith or file.extension.equals.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "FindViewByIdCast",
    "name": "Add Explicit Cast",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn Android O, the findViewById signature switched to using generics, which\nmeans that most of the time you can leave out explicit casts and just assign\nthe result of the findViewById call to variables of specific view classes.\n</p>\n<p>\nHowever, due to language changes between Java 7 and 8, this change may cause\ncode to not compile without explicit casts. This lint check looks for these\nscenarios and suggests casts to be added now such that the code will continue\nto compile if the language level is updated to 1.8.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "FontValidation",
    "name": "Validation of font files",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nLook for problems in various font files.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/text/downloadable-fonts.html\">https://developer.android.com/guide/topics/text/downloadable-fonts.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "FullBackupContent",
    "name": "Valid Full Backup Content File",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nEnsures that &lt;data-extraction-rules&gt; and &lt;full-backup-content&gt; files, which\nconfigure backup options, are valid.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://android-developers.googleblog.com/2015/07/auto-backup-for-apps-made-simple.html\">https://android-developers.googleblog.com/2015/07/auto-backup-for-apps-made-simple.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "GetContentDescriptionOverride",
    "name": "Overriding getContentDescription() on a View",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nOverriding getContentDescription() may prevent some accessibility services\nfrom properly navigating content exposed by your view. Instead, call\nsetContentDescription() when the content description needs to be changed.\n</p>\n<p>\n</p>\n",
    "tags": [
      "accessibility",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GetInstance",
    "name": "Cipher.getInstance with ECB",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nCipher#getInstance should not be called with ECB as the cipher mode or without\nsetting the cipher mode because the default mode on android is ECB, which is\ninsecure.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GetLocales",
    "name": "Locale crash",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check looks for usage of Lollipop-style locale folders (e.g. 3 letter\nlanguage codes, or BCP 47 qualifiers) combined with an\nAssetManager#getLocales() call. This leads to crashes\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GifUsage",
    "name": "Using .gif format for bitmaps is discouraged",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe .gif file format is discouraged. Consider using .png (preferred) or .jpg\n(acceptable) instead.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap\">https://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GradleCompatible",
    "name": "Incompatible Gradle Versions",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThere are some combinations of libraries, or tools and libraries, that are\nincompatible, or can lead to bugs. One such incompatibility is compiling with\na version of the Android support libraries that is not the latest version (or\nin particular, a version lower than your targetSdkVersion).\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "GradleDependency",
    "name": "Obsolete Gradle Dependency",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis detector looks for usages of libraries where the version you are using is\nnot the current stable release. Using older versions is fine, and there are\ncases where you deliberately want to stick with an older version. However, you\nmay simply not be aware that a more recent version is available, and that is\nwhat this lint check helps find.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GradleDeprecated",
    "name": "Deprecated Gradle Construct",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis detector looks for deprecated Gradle constructs which currently work but\nwill likely stop working in a future update.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GradleDeprecatedConfiguration",
    "name": "Deprecated Gradle Configuration",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSome Gradle configurations have been deprecated since Android Gradle Plugin\n3.0.0 and will be removed in a future version of the Android Gradle Plugin.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://d.android.com/r/tools/update-dependency-configurations\">https://d.android.com/r/tools/update-dependency-configurations</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GradleDynamicVersion",
    "name": "Gradle Dynamic Version",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsing + in dependencies lets you automatically pick up the latest available\nversion rather than a specific, named version. However, this is not\nrecommended; your builds are not repeatable; you may have tested with a\nslightly different version than what the build server used. (Using a dynamic\nversion as the major version number is more problematic than using it in the\nminor version position.)\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GradleGetter",
    "name": "Gradle Implicit Getter Call",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nGradle will let you replace specific constants in your build scripts with\nmethod calls, so you can for example dynamically compute a version string\nbased on your current version control revision number, rather than hardcoding\na number.\n</p>\n<p>\nWhen computing a version name, it's tempting to for example call the method to\ndo that getVersionName. However, when you put that method call inside the\ndefaultConfig block, you will actually be calling the Groovy getter for the\nversionName property instead. Therefore, you need to name your method\nsomething which does not conflict with the existing implicit getters. Consider\nusing compute as a prefix instead of get.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GradleIdeError",
    "name": "Gradle IDE Support Issues",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nGradle is highly flexible, and there are things you can do in Gradle files\nwhich can make it hard or impossible for IDEs to properly handle the project.\nThis lint check looks for constructs that potentially break IDE support.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GradleOverrides",
    "name": "Value overridden by Gradle build script",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe value of (for example) minSdkVersion is only used if it is not specified\nin the build.gradle build scripts. When specified in the Gradle build scripts,\nthe manifest value is ignored and can be misleading, so should be removed to\navoid ambiguity.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GradlePath",
    "name": "Gradle Path Issues",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nGradle build scripts are meant to be cross platform, so file paths use\nUnix-style path separators (a forward slash) rather than Windows path\nseparators (a backslash). Similarly, to keep projects portable and repeatable,\navoid using absolute paths on the system; keep files within the project\ninstead. To share code between projects, consider creating an android-library\nand an AAR dependency\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GradlePluginVersion",
    "name": "Incompatible Android Gradle Plugin",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nNot all versions of the Android Gradle plugin are compatible with all versions\nof the SDK. If you update your tools, or if you are trying to open a project\nthat was built with an old version of the tools, you may need to update your\nplugin version number.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GrantAllUris",
    "name": "Content provider shares everything",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe &lt;grant-uri-permission&gt; element allows specific paths to be shared. This\ndetector checks for a path URL of just '/' (everything), which is probably not\nwhat you want; you should limit access to a subset.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "GridLayout",
    "name": "GridLayout validation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nDeclaring a layout_row or layout_column that falls outside the declared size\nof a GridLayout's rowCount or columnCount is usually an unintentional error.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "HalfFloat",
    "name": "Incorrect Half Float",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nHalf-precision floating point are stored in a short data type, and should be\nmanipulated using the android.util.Half class. This check flags usages where\nit appears that these values are used incorrectly.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "HandlerLeak",
    "name": "Handler reference leaks",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSince this Handler is declared as an inner class, it may prevent the outer\nclass from being garbage collected. If the Handler is using a Looper or\nMessageQueue for a thread other than the main thread, then there is no issue.\nIf the Handler is using the Looper or MessageQueue of the main thread, you\nneed to fix your Handler declaration, as follows: Declare the Handler as a\nstatic class; In the outer class, instantiate a WeakReference to the outer\nclass and pass this object to your Handler when you instantiate the Handler;\nMake all references to members of the outer class using the WeakReference\nobject.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "HardcodedDebugMode",
    "name": "Hardcoded value of android:debuggable in the manifest",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIt's best to leave out the android:debuggable attribute from the manifest. If\nyou do, then the tools will automatically insert android:debuggable=true when\nbuilding an APK to debug on an emulator or device. And when you perform a\nrelease build, such as Exporting APK, it will automatically set it to false.\n</p>\n<p>\nIf on the other hand you specify a specific value in the manifest file, then\nthe tools will always use it. This can lead to accidentally publishing your\napp with debug information.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "HardcodedText",
    "name": "Hardcoded text",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nHardcoding text attributes directly in layout files is bad for several\nreasons:<br />\n</p>\n<p>\n* When creating configuration variations (for example for landscape or\nportrait) you have to repeat the actual text (and keep it up to date when\nmaking changes)\n</p>\n<p>\n* The application cannot be translated to other languages by just adding new\ntranslations for existing string resources.\n</p>\n<p>\nThere are quickfixes to automatically extract this hardcoded string into a\nresource lookup.\n</p>\n<p>\n</p>\n",
    "tags": [
      "i18n",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "HardwareIds",
    "name": "Hardware Id Usage",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsing these device identifiers is not recommended other than for high value\nfraud prevention and advanced telephony use-cases. For advertising use-cases,\nuse AdvertisingIdClient$Info#getId and for analytics, use InstanceId#getId.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/articles/user-data-ids.html\">https://developer.android.com/training/articles/user-data-ids.html</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "HighAppVersionCode",
    "name": "VersionCode too high",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe declared versionCode is an Integer. Ensure that the version number is not\nclose to the limit. It is recommended to monotonically increase this number\neach minor or major release of the app. Note that updating an app with a\nversionCode over Integer.MAX_VALUE is not possible.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/studio/publish/versioning.html\">https://developer.android.com/studio/publish/versioning.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "HighSamplingRate",
    "name": "High sensor sampling rate",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nMost apps don't need access to high sensor sampling rate. Double check your\nuse case to ensure your app absolutely needs access to sensor sampling rate &gt;\n200Hz. Be prepared for your app to be rejected from listing on Play Store\nuntil your use case for high sensor sampling rate has been reviewed and\nvalidated by the policy team.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconColors",
    "name": "Icon colors do not follow the recommended visual style",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nNotification icons and Action Bar icons should only white and shades of gray.\nSee the Android Design Guide for more details. Note that the way Lint decides\nwhether an icon is an action bar icon or a notification icon is based on the\nfilename prefix: ic_menu_ for action bar icons, ic_stat_ for notification\nicons etc. These correspond to the naming conventions documented in\nhttps://material.io/design/iconography/\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconDensities",
    "name": "Icon densities validation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIcons will look best if a custom version is provided for each of the major\nscreen density classes (low, medium, high, extra high). This lint check\nidentifies icons which do not have complete coverage across the densities.\n</p>\n<p>\nLow density is not really used much anymore, so this check ignores the ldpi\ndensity. To force lint to include it, set the environment variable\nANDROID_LINT_INCLUDE_LDPI=true. For more information on current density usage,\nsee https://developer.android.com/about/dashboards\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/practices/screens_support.html\">https://developer.android.com/guide/practices/screens_support.html</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconDipSize",
    "name": "Icon density-independent size validation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nChecks the all icons which are provided in multiple densities, all compute to\nroughly the same density-independent pixel (dip) size. This catches errors\nwhere images are either placed in the wrong folder, or icons are changed to\nnew sizes but some folders are forgotten.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconDuplicates",
    "name": "Duplicated icons under different names",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf an icon is repeated under different names, you can consolidate and just use\none of the icons and delete the others to make your application smaller.\nHowever, duplicated icons usually are not intentional and can sometimes point\nto icons that were accidentally overwritten or accidentally not updated.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconDuplicatesConfig",
    "name": "Identical bitmaps across various configurations",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf an icon is provided under different configuration parameters such as\ndrawable-hdpi or -v11, they should typically be different. This detector\ncatches cases where the same icon is provided in different configuration\nfolder which is usually not intentional.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconExpectedSize",
    "name": "Icon has incorrect size",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable IconExpectedSize\n</p>\n<p>\nThere are predefined sizes (for each density) for launcher icons. You should\nfollow these conventions to make sure your icons fit in with the overall look\nof the platform.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://material.io/design/iconography/\">https://material.io/design/iconography/</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconExtension",
    "name": "Icon format does not match the file extension",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nEnsures that icons have the correct file extension (e.g. a .png file is really\nin the PNG format and not for example a GIF file named .png).\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconLauncherShape",
    "name": "The launcher icon shape should use a distinct silhouette",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAccording to the Android Design Guide\n(https://material.io/design/iconography/) your launcher icons should &quot;use a\ndistinct silhouette&quot;, a &quot;three-dimensional, front view, with a slight\nperspective as if viewed from above, so that users perceive some depth.&quot;\n</p>\n<p>\nThe unique silhouette implies that your launcher icon should not be a filled\nsquare.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconLocation",
    "name": "Image defined in density-independent drawable folder",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe res/drawable folder is intended for density-independent graphics such as\nshapes defined in XML. For bitmaps, move it to drawable-mdpi and consider\nproviding higher and lower resolution versions in drawable-ldpi, drawable-hdpi\nand drawable-xhdpi. If the icon really is density independent (for example a\nsolid color) you can place it in drawable-nodpi.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/practices/screens_support.html\">https://developer.android.com/guide/practices/screens_support.html</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconMissingDensityFolder",
    "name": "Missing density folder",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIcons will look best if a custom version is provided for each of the major\nscreen density classes (low, medium, high, extra-high, extra-extra-high). This\nlint check identifies folders which are missing, such as drawable-hdpi.\n</p>\n<p>\nLow density is not really used much anymore, so this check ignores the ldpi\ndensity. To force lint to include it, set the environment variable\nANDROID_LINT_INCLUDE_LDPI=true. For more information on current density usage,\nsee https://developer.android.com/about/dashboards\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/practices/screens_support.html\">https://developer.android.com/guide/practices/screens_support.html</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconMixedNinePatch",
    "name": "Clashing PNG and 9-PNG files",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf you accidentally name two separate resources file.png and file.9.png, the\nimage file and the nine patch file will both map to the same drawable\nresource, @drawable/file, which is probably not what was intended.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconNoDpi",
    "name": "Icon appears in both -nodpi and dpi folders",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nBitmaps that appear in drawable-nodpi folders will not be scaled by the\nAndroid framework. If a drawable resource of the same name appears both in a\n-nodpi folder as well as a dpi folder such as drawable-hdpi, then the behavior\nis ambiguous and probably not intentional. Delete one or the other, or use\ndifferent names for the icons.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IconXmlAndPng",
    "name": "Icon is specified both as .xml file and as a bitmap",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf a drawable resource appears as an .xml file in the drawable/ folder, it's\nusually not intentional for it to also appear as a bitmap using the same name;\ngenerally you expect the drawable XML file to define states and each state has\na corresponding drawable bitmap.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IgnoreWithoutReason",
    "name": "@Ignore without Reason",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIgnoring a test without a reason makes it difficult to figure out the problem\nlater. Please define an explicit reason why it is ignored, and when it can be\nresolved.\n</p>\n<p>\n</p>\n",
    "tags": [
      "testing",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IllegalResourceRef",
    "name": "Name and version must be integer or string, not resource",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFor the versionCode attribute, you have to specify an actual integer literal;\nyou cannot use an indirection with a @dimen/name resource. Similarly, the\nversionName attribute should be an actual string, not a string resource url.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ImplicitSamInstance",
    "name": "Implicit SAM Instances",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable ImplicitSamInstance\n</p>\n<p>\nKotlin's support for SAM (single accessor method) interfaces lets you pass a\nlambda to the interface. This will create a new instance on the fly even\nthough there is no explicit constructor call. If you pass one of these lambdas\nor method references into a method which (for example) stores or compares the\nobject identity, unexpected results may happen.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ImpliedQuantity",
    "name": "Implied Quantities",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nPlural strings should generally include a %s or %d formatting argument. In\nlocales like English, the one quantity only applies to a single value, 1, but\nthat's not true everywhere. For example, in Slovene, the one quantity will\napply to 1, 101, 201, 301, and so on. Similarly, there are locales where\nmultiple values match the zero and two quantities.\n</p>\n<p>\nIn these locales, it is usually an error to have a message which does not\ninclude a formatting argument (such as '%d'), since it will not be clear from\nthe grammar what quantity the quantity string is describing.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/resources/string-resource.html#Plurals\">https://developer.android.com/guide/topics/resources/string-resource.html#Plurals</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ImpliedTouchscreenHardware",
    "name": "Touchscreen not optional",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nApps require the android.hardware.touchscreen feature by default. If you want\nyour app to be available on TV, you must also explicitly declare that a\ntouchscreen is not required as follows:<br />\n&lt;uses-feature android:name=&quot;android.hardware.touchscreen&quot;\nandroid:required=&quot;false&quot;/&gt;\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/manifest/uses-feature-element.html\">https://developer.android.com/guide/topics/manifest/uses-feature-element.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InOrMmUsage",
    "name": "Using mm or in dimensions",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAvoid using mm (millimeters) or in (inches) as the unit for dimensions.\n</p>\n<p>\nWhile it should work in principle, unfortunately many devices do not report\nthe correct true physical density, which means that the dimension calculations\nwon't work correctly. You are better off using dp (and for font sizes, sp).\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IncludeLayoutParam",
    "name": "Ignored layout params on include",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nLayout parameters specified on an &lt;include&gt; tag will only be used if you also\noverride layout_width and layout_height on the &lt;include&gt; tag; otherwise they\nwill be ignored.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://stackoverflow.com/questions/2631614/does-android-xml-layouts-include-tag-really-work\">https://stackoverflow.com/questions/2631614/does-android-xml-layouts-include-tag-really-work</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IncompatibleMediaBrowserServiceCompatVersion",
    "name": "Obsolete version of MediaBrowserServiceCompat",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nMediaBrowserServiceCompat from version 23.2.0 to 23.4.0 of the Support v4\nLibrary used private APIs and will not be compatible with future versions of\nAndroid beyond Android N. Please upgrade to version 24.0.0 or higher of the\nSupport Library.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InconsistentArrays",
    "name": "Inconsistencies in array element counts",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen an array is translated in a different locale, it should normally have the\nsame number of elements as the original array. When adding or removing\nelements to an array, it is easy to forget to update all the locales, and this\nlint warning finds inconsistencies like these.\n</p>\n<p>\nNote however that there may be cases where you really want to declare a\ndifferent number of array items in each configuration (for example where the\narray represents available options, and those options differ for different\nlayout orientations and so on), so use your own judgment to decide if this is\nreally an error.\n</p>\n<p>\nYou can suppress this error type if it finds false errors in your project.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InconsistentLayout",
    "name": "Inconsistent Layouts",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check ensures that a layout resource which is defined in multiple\nresource folders, specifies the same set of widgets.\n</p>\n<p>\nThis finds cases where you have accidentally forgotten to add a widget to all\nvariations of the layout, which could result in a runtime crash for some\nresource configurations when a findViewById() fails.\n</p>\n<p>\nThere are cases where this is intentional. For example, you may have a\ndedicated large tablet layout which adds some extra widgets that are not\npresent in the phone version of the layout. As long as the code accessing the\nlayout resource is careful to handle this properly, it is valid. In that case,\nyou can suppress this lint check for the given extra or missing views, or the\nwhole layout\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InefficientWeight",
    "name": "Inefficient layout weight",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen only a single widget in a LinearLayout defines a weight, it is more\nefficient to assign a width/height of 0dp to it since it will absorb all the\nremaining space anyway. With a declared width/height of 0dp it does not have\nto measure its own size first.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InflateParams",
    "name": "Layout Inflation without a Parent",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen inflating a layout, avoid passing in null as the parent view, since\notherwise any layout parameters on the root of the inflated layout will be\nignored.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/\">https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InlinedApi",
    "name": "Using inlined constants on older versions",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check scans through all the Android API field references in the\napplication and flags certain constants, such as static final integers and\nStrings, which were introduced in later versions. These will actually be\ncopied into the class files rather than being referenced, which means that the\nvalue is available even when running on older devices. In some cases that's\nfine, and in other cases it can result in a runtime crash or incorrect\nbehavior. It depends on the context, so consider the code carefully and decide\nwhether it's safe and can be suppressed or whether the code needs to be\nguarded.\n</p>\n<p>\nIf you really want to use this API and don't need to support older devices\njust set the minSdkVersion in your build.gradle or AndroidManifest.xml files.\n</p>\n<p>\nIf your code is deliberately accessing newer APIs, and you have ensured (e.g.\nwith conditional execution) that this code will only ever be called on a\nsupported platform, then you can annotate your class or method with the\n@TargetApi annotation specifying the local minimum SDK to apply, such as\n@TargetApi(11), such that this check considers 11 rather than your manifest\nfile's minimum SDK as the required API level.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InnerclassSeparator",
    "name": "Inner classes should use $ rather than .",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen you reference an inner class in a manifest file, you must use '$' instead\nof '.' as the separator character, i.e. Outer$Inner instead of Outer.Inner.\n</p>\n<p>\n(If you get this warning for a class which is not actually an inner class,\nit's because you are using uppercase characters in your package name, which is\nnot conventional.)\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InsecureBaseConfiguration",
    "name": "Insecure Base Configuration",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nPermitting cleartext traffic could allow eavesdroppers to intercept data sent\nby your app, which impacts the privacy of your users. Consider only allowing\nencrypted traffic by setting the cleartextTrafficPermitted tag to &quot;false&quot;.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/preview/features/security-config.html\">https://developer.android.com/preview/features/security-config.html</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InstantApps",
    "name": "Instant App Issues",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis issue flags code that will not work correctly in Instant Apps\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Instantiatable",
    "name": "Registered class is not instantiatable",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nActivities, services, broadcast receivers etc. registered in the manifest file\n(or for custom views, in a layout file) must be &quot;instantiatable&quot; by the\nsystem, which means that the class must be public, it must have an empty\npublic constructor, and if it's an inner class, it must be a static inner\nclass.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "IntentFilterExportedReceiver",
    "name": "Unspecified android:exported in manifest",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nApps targeting Android 12 and higher are required to specify an explicit value\nfor android:exported when the corresponding component has an intent filter\ndefined. Otherwise, installation will fail. Set it to true to make this\nactivity accessible to other apps, and false to limit it to be used only by\nthis app or the OS. For launch activities, this should be set to true;\notherwise, the app will fail to launch.\n</p>\n<p>\nPreviously, android:exported for components without any intent filters present\nused to default to false, and when intent filters were present, the default\nwas true. Defaults which change value based on other values are confusing and\nlead to apps accidentally exporting components as a side-effect of adding\nintent filters. This is a security risk, and we have made this change to avoid\nintroducing accidental vulnerabilities.\n</p>\n<p>\nWhile the default without intent filters remains unchanged, it is now required\nto explicitly specify a value when intent filters are present. Any app failing\nto meet this requirement will fail to install on any Android version after\nAndroid 11.\n</p>\n<p>\nWe recommend setting android:exported to false (even on previous versions of\nAndroid prior to this requirement) unless you have a good reason to export a\nparticular component.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IntentFilterUniqueDataAttributes",
    "name": "Data tags should only declare unique attributes",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\n&lt;intent-filter&gt; &lt;data&gt; tags should only declare a single unique attribute\n(i.e. scheme OR host, but not both). This better matches the runtime behavior\nof intent filters, as they combine all of the declared data attributes into a\nsingle matcher which is allowed to handle any combination across attribute\ntypes.\n</p>\n<p>\nFor example, the following two &lt;intent-filter&gt; declarations are the same:<br />\n&lt;intent-filter&gt;\n    &lt;data android:scheme=&quot;http&quot; android:host=&quot;example.com&quot; /&gt;\n    &lt;data android:scheme=&quot;https&quot; android:host=&quot;example.org&quot; /&gt;\n&lt;/intent-filter&gt;\n</p>\n<p>\n&lt;intent-filter&gt;\n    &lt;data android:scheme=&quot;http&quot;/&gt;\n    &lt;data android:scheme=&quot;https&quot;/&gt;\n    &lt;data android:host=&quot;example.com&quot; /&gt;\n    &lt;data android:host=&quot;example.org&quot; /&gt;\n&lt;/intent-filter&gt;\n</p>\n<p>\nThey both handle all of the following:<br />\n* http://example.com\n* https://example.com\n* http://example.org\n* https://example.org\n</p>\n<p>\nThe second one better communicates the combining behavior and is clearer to an\nexternal reader that one should not rely on the scheme/host being self\ncontained. It is not obvious in the first that http://example.org is also\nmatched, which can lead to confusion (or incorrect behavior) with a more\ncomplex set of schemes/hosts.\n</p>\n<p>\nNote that this does not apply to host + port, as those must be declared in the\nsame &lt;data&gt; tag and are only associated with each other.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/components/intents-filters\">https://developer.android.com/guide/components/intents-filters</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "IntentReset",
    "name": "Suspicious mix of setType and setData",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIntent provides the following APIs: setData(Uri) and setType(String).\nUnfortunately, setting one clears the other. If you want to set both, you\nshould call setDataAndType(Uri, String) instead.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InternalInsetResource",
    "name": "Using internal inset dimension resource",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe internal inset dimension resources are not a supported way to retrieve the\nrelevant insets for your application. The insets are dynamic values that can\nchange while your app is visible, and your app's window may not intersect with\nthe system UI. To get the relevant value for your app and listen to updates,\nuse androidx.core.view.WindowInsetsCompat and related APIs.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InvalidAnalyticsName",
    "name": "Invalid Analytics Name",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nEvent names and parameters must follow the naming conventions defined in\nthe`FirebaseAnalytics#logEvent()` documentation.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://firebase.google.com/docs/reference/android/com/google/firebase/analytics/FirebaseAnalytics#logEvent(java.lang.String,%20android.os.Bundle)\">https://firebase.google.com/docs/reference/android/com/google/firebase/analytics/FirebaseAnalytics#logEvent(java.lang.String,%20android.os.Bundle)</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InvalidId",
    "name": "Invalid ID declaration",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAn id definition must be of the form @+id/yourname. The tools have not\nrejected strings of the form @+foo/bar in the past, but that was an error, and\ncould lead to tricky errors because of the way the id integers are assigned.\n</p>\n<p>\nIf you really want to have different &quot;scopes&quot; for your id's, use prefixes\ninstead, such as login_button1 and login_button2.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "InvalidImeActionId",
    "name": "Invalid imeActionId declaration",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nandroid:imeActionId should not be a resource ID such as @+id/resName. It must\nbe an integer constant, or an integer resource reference, as defined in\nEditorInfo.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html\">https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InvalidNavigation",
    "name": "No start destination specified",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAll &lt;navigation&gt; elements must have a start destination specified, and it must\nbe a direct child of that &lt;navigation&gt;.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InvalidPackage",
    "name": "Package not included in Android",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable InvalidPackage\n</p>\n<p>\nThis check scans through libraries looking for calls to APIs that are not\nincluded in Android.\n</p>\n<p>\nWhen you create Android projects, the classpath is set up such that you can\nonly access classes in the API packages that are included in Android. However,\nif you add other projects to your libs/ folder, there is no guarantee that\nthose .jar files were built with an Android specific classpath, and in\nparticular, they could be accessing unsupported APIs such as java.applet.\n</p>\n<p>\nThis check scans through library jars and looks for references to API packages\nthat are not included in Android and flags these. This is only an error if\nyour code calls one of the library classes which wind up referencing the\nunsupported package.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InvalidPermission",
    "name": "Invalid Permission Attribute",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nNot all elements support the permission attribute. If a permission is set on\nan invalid element, it is a no-op and ignored. Ensure that this permission\nattribute was set on the correct element to protect the correct component.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InvalidResourceFolder",
    "name": "Invalid Resource Folder",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis lint check looks for a folder name that is not a valid resource folder\nname; these will be ignored and not packaged by the Android Gradle build\nplugin.\n</p>\n<p>\nNote that the order of resources is very important; for example, you can't\nspecify a language before a network code.\n</p>\n<p>\nSimilarly, note that to use 3 letter region codes, you have to use a special\nBCP 47 syntax: the prefix b+ followed by the BCP 47 language tag but with + as\nthe individual separators instead of -. Therefore, for the BCP 47 language tag\nnl-ABW you have to use b+nl+ABW.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/resources/providing-resources.html\">https://developer.android.com/guide/topics/resources/providing-resources.html</a><br />\nhttps://tools.ietf.org/html/bcp47\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InvalidUsesTagAttribute",
    "name": "Invalid name attribute for uses element",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe &lt;uses&gt; element in &lt;automotiveApp&gt; should contain a valid value for the\nname attribute. Valid values are media, notification, or sms.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/auto/start/index.html#auto-metadata\">https://developer.android.com/training/auto/start/index.html#auto-metadata</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InvalidVectorPath",
    "name": "Invalid vector paths",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check ensures that vector paths are valid. For example, it makes sure\nthat the numbers are not using scientific notation (such as 1.0e3) which can\nlead to runtime crashes on older devices. As another example, it flags numbers\nlike .5 which should be written as 0.5 instead to avoid crashes on some\npre-Marshmallow devices.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://issuetracker.google.com/37008268\">https://issuetracker.google.com/37008268</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InvalidWakeLockTag",
    "name": "Invalid Wake Lock Tag",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWake Lock tags must follow the naming conventions defined in the`PowerManager`\ndocumentation.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/android/os/PowerManager.html\">https://developer.android.com/reference/android/os/PowerManager.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "InvalidWearFeatureAttribute",
    "name": "Invalid attribute for Wear uses-feature",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFor the android.hardware.type.watch uses-feature, android:required=&quot;false&quot; is\ndisallowed. A single APK for Wear and non-Wear devices is not supported.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/wearables/apps/packaging.html\">https://developer.android.com/training/wearables/apps/packaging.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "JavaPluginLanguageLevel",
    "name": "No Explicit Java Language Level Given",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn modules using plugins deriving from the Gradle java plugin (e.g.\njava-library or application), the java source and target compatibility default\nto the version of the JDK being used to run Gradle, which may cause\ncompatibility problems with Android (or other) modules.\n</p>\n<p>\nYou can specify an explicit sourceCompatibility and targetCompatibility in\nthis module to maintain compatibility no matter which JDK is used to run\nGradle.\n</p>\n<p>\n</p>\n<p>\nInteroperability:Kotlin Interoperability\n========================================\n</p>\n",
    "tags": [
      "interoperability",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "JavascriptInterface",
    "name": "Missing @JavascriptInterface on methods",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAs of API 17, you must annotate methods in objects registered with the\naddJavascriptInterface method with a @JavascriptInterface annotation.\n</p>\n<p>\nMore information: <br />\nhttps://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object, java.lang.String)\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "JcenterRepositoryObsolete",
    "name": "JCenter Maven repository is read-only",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe JCenter Maven repository is no longer accepting submissions of Maven\nartifacts since 31st March 2021.  Ensure that the project is configured to\nsearch in repositories with the latest versions of its dependencies.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/r/tools/jcenter-end-of-service\">https://developer.android.com/r/tools/jcenter-end-of-service</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "JobSchedulerService",
    "name": "JobScheduler problems",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check looks for various common mistakes in using the JobScheduler API:<br />\nthe service class must extend JobService, the service must be registered in\nthe manifest and the registration must require the permission\nandroid.permission.BIND_JOB_SERVICE.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/topic/performance/scheduling.html\">https://developer.android.com/topic/performance/scheduling.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "KeyboardInaccessibleWidget",
    "name": "Keyboard inaccessible widget",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nA widget that is declared to be clickable but not declared to be focusable is\nnot accessible via the keyboard. Please add the focusable attribute as well.\n</p>\n<p>\n</p>\n",
    "tags": [
      "accessibility",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "KotlinNullnessAnnotation",
    "name": "Kotlin nullability annotation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn Kotlin, nullness is part of the type system; s: String is never null and s:<br />\nString? is sometimes null, whether or not you add in additional annotations\nstating @NonNull or @Nullable. These are likely copy/paste mistakes, and are\nmisleading.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "KotlinPropertyAccess",
    "name": "Kotlin Property Access",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable KotlinPropertyAccess\n</p>\n<p>\nFor a method to be represented as a property in Kotlin, strict &ldquo;bean&rdquo;-style\nprefixing must be used.\n</p>\n<p>\nAccessor methods require a get prefix or for boolean-returning methods an is\nprefix can be used.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://android.github.io/kotlin-guides/interop.html#property-prefixes\">https://android.github.io/kotlin-guides/interop.html#property-prefixes</a><br />\n</p>\n",
    "tags": [
      "interoperability",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "KtxExtensionAvailable",
    "name": "KTX Extension Available",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAndroid KTX extensions augment some libraries with support for modern Kotlin\nlanguage features like extension functions, extension properties, lambdas,\nnamed parameters, coroutines, and more.\n</p>\n<p>\nIn Kotlin projects, use the KTX version of a library by replacing the\ndependency in your build.gradle file. For example, you can replace\nandroidx.fragment:fragment with androidx.fragment:fragment-ktx.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/kotlin/ktx\">https://developer.android.com/kotlin/ktx</a><br />\n</p>\n",
    "tags": [
      "productivity",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "INFO",
    "constantDebtMinutes": 5
  },
  {
    "key": "LabelFor",
    "name": "Missing accessibility label",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nEditable text fields should provide an android:hint or, provided your\nminSdkVersion is at least 17, they may be referenced by a view with a\nandroid:labelFor attribute.\n</p>\n<p>\nWhen using android:labelFor, be sure to provide an android:text or an\nandroid:contentDescription.\n</p>\n<p>\nIf your view is labeled but by a label in a different layout which includes\nthis one, just suppress this warning from lint.\n</p>\n<p>\n</p>\n",
    "tags": [
      "accessibility",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LambdaLast",
    "name": "Lambda Parameters Last",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable LambdaLast\n</p>\n<p>\nTo improve calling this code from Kotlin, parameter types eligible for SAM\nconversion should be last.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://android.github.io/kotlin-guides/interop.html#lambda-parameters-last\">https://android.github.io/kotlin-guides/interop.html#lambda-parameters-last</a><br />\n</p>\n",
    "tags": [
      "interoperability",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LaunchActivityFromNotification",
    "name": "Notification Launches Services or BroadcastReceivers",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nNotifications should only launch activities -- that's what users expect (and\nhas been the guidance in both the Android SDK and Material Design\ndocumentation for a while).\n</p>\n<p>\nA Service or a BroadcastReceiver should not be used as an intermediate,\nbecause this can lead to significant performance problems, and as a result,\nthis will not be allowed in Android 12.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/ui/notifiers/notifications?hl=en#Actions\">https://developer.android.com/guide/topics/ui/notifiers/notifications?hl=en#Actions</a><br />\nhttps://material.io/design/platform-guidance/android-notifications.html#behavior\nhttps://developer.android.com/guide/topics/ui/notifiers/notifications?hl=en\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LeanbackUsesWifi",
    "name": "Using android.hardware.wifi on TV",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWiFi is not required for Android TV and many devices connect to the internet\nvia alternative methods e.g. Ethernet.\n</p>\n<p>\nIf your app is not focused specifically on WiFi functionality and only wishes\nto connect to the internet, please modify your Manifest to contain:<br />\n&lt;uses-feature android:name=&quot;android.hardware.wifi&quot; android:required=&quot;false&quot;\n/&gt;\n</p>\n<p>\nUn-metered or non-roaming connections can be detected in software using\nNetworkCapabilities#NET_CAPABILITY_NOT_METERED and\nNetworkCapabilities#NET_CAPABILITY_NOT_ROAMING.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LibraryCustomView",
    "name": "Custom views in libraries should use res-auto-namespace",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen using a custom view with custom attributes in a library project, the\nlayout must use the special namespace http://schemas.android.com/apk/res-auto\ninstead of a URI which includes the library project's own package. This will\nbe used to automatically adjust the namespace of the attributes when the\nlibrary resources are merged into the application project.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "LifecycleAnnotationProcessorWithJava8",
    "name": "Lifecycle Annotation Processor with Java 8 Compile Option",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFor faster incremental build, switch to the Lifecycle Java 8 API with these\nsteps:<br />\n</p>\n<p>\nFirst replace\nannotationProcessor &quot;androidx.lifecycle:lifecycle-compiler:*version*&quot;\nkapt &quot;androidx.lifecycle:lifecycle-compiler:*version*&quot;\nwith\nimplementation &quot;androidx.lifecycle:lifecycle-common-java8:*version*&quot;\nThen remove any OnLifecycleEvent annotations from Observer classes and make\nthem implement the DefaultLifecycleObserver interface.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://d.android.com/r/studio-ui/lifecycle-release-notes\">https://d.android.com/r/studio-ui/lifecycle-release-notes</a><br />\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LintDocExample",
    "name": "Missing Documentation Example",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable LintDocExample\n</p>\n<p>\nLint's tool for generating documentation for each issue has special support\nfor including a code example which shows how to trigger the report. It will\npick the first unit test it can find and pick out the source file referenced\nfrom the error message, but you can instead designate a unit test to be the\ndocumentation example, and in that case, all the files are included.\n</p>\n<p>\nTo designate a unit test as the documentation example for an issue, name the\ntest testDocumentationExample, or if your detector reports multiple issues,\ntestDocumentationExample&lt;Id&gt;, such as testDocumentationExampleMyId.\n</p>\n<p>\n</p>\n",
    "tags": [
      "lint-implementation",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LintImplBadUrl",
    "name": "Bad More Info Link",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nMore Info URLs let a link check point to additional resources about the\nproblem and solution it's checking for.\n</p>\n<p>\nThis check validates the URLs in various ways, such as making sure that issue\ntracker links look correct. It may also at some point touch the network to\nmake sure that the URLs are actually still reachable.\n</p>\n<p>\n</p>\n",
    "tags": [
      "lint-implementation",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LintImplDollarEscapes",
    "name": "Using Dollar Escapes",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nInstead of putting ${&quot;$&quot;} in your Kotlin raw string literals you can simply\nuse ＄. This looks like the dollar sign but is instead the full width dollar\nsign, U+FF04. And this character does not need to be escaped in Kotlin raw\nstrings, since it does not start a string template.\n</p>\n<p>\nLint will automatically convert references to ＄ in unit test files into a real\ndollar sign, and when pulling results and error messages out of lint, the\ndollar sign back into the full width dollar sign.\n</p>\n<p>\nThat means you can use ＄ everywhere instead of ${&quot;$&quot;}, which makes the test\nstrings more readable -- especially $-heavy code such as references to inner\nclasses.\n</p>\n<p>\n</p>\n",
    "tags": [
      "lint-implementation",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LintImplIdFormat",
    "name": "Lint ID Format",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check looks at lint issue id registrations and makes sure the id follows\nthe expected conventions: capitalized, camel case, no spaces, and not too\nlong.\n</p>\n<p>\nNote: You shouldn't change id's for lint checks that are already widely used,\nsince the id can already appear in @SuppressLint annotations, tools:ignore=\nattributes, lint baselines, Gradle lintOptions blocks, lint.xml files, and so\non. In these cases, just explicitly suppress this warning instead using\nsomething like\n</p>\n<p>\n@JvmField\nval ISSUE = Issue.create(\n    // ID string is too long, but we can't change this now since\n    // this id is already used in user suppress configurations\n    //noinspection LintImplIdFormat\n    id = &quot;IncompatibleMediaBrowserServiceCompatVersion&quot;,\n    ...\n</p>\n<p>\n</p>\n",
    "tags": [
      "lint-implementation",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LintImplPsiEquals",
    "name": "Comparing PsiElements with Equals",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable LintImplPsiEquals\n</p>\n<p>\nYou should never compare two PSI elements for equality with equals; use\nisEquivalentTo(PsiElement) instead.\n</p>\n<p>\n</p>\n",
    "tags": [
      "lint-implementation",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LintImplTextFormat",
    "name": "Lint Text Format",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nLint supports various markdown like formatting directives in all of its\nstrings (issue explanations, reported error messages, etc).\n</p>\n<p>\nThis lint check looks for strings that look like they may benefit from\nadditional formatting. For example, if a snippet looks like code it should be\nsurrounded with backticks.\n</p>\n<p>\nNote: Be careful changing existing strings; this may stop baseline file\nmatching from working, so consider suppressing existing violations of this\ncheck if this is an error many users may be filtering in baselines. (This is\nonly an issue for strings used in report calls; for issue registration strings\nlike summaries and explanations there's no risk changing the text contents.)\n</p>\n<p>\n</p>\n",
    "tags": [
      "lint-implementation",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LintImplTrimIndent",
    "name": "Calling .trimIndent on Lint Strings",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nLint implicitly calls .trimIndent() (lazily, at the last minute) in a number\nof places:<br />\n* Issue explanations\n* Error messages\n* Lint test file descriptions\n* etc\n</p>\n<p>\nThat means you don't need to put .trimIndent() in your source code to handle\nthis.\n</p>\n<p>\nThere are advantages to not putting .trimIndent() in the code. For test files,\nif you call for example kotlin(&quot;&quot;\\&quot;source code&quot;\\&quot;&quot;\\&quot;) then IntelliJ/Android\nStudio will syntax highlight the source code as Kotlin. The second you add in\na .trimIndent() on the string, the syntax highlighting goes away. For test\nfiles you can instead call &quot;.indented()&quot; on the test file builder to get it to\nindent the string.\n</p>\n<p>\n</p>\n",
    "tags": [
      "lint-implementation",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LintImplUnexpectedDomain",
    "name": "Unexpected URL Domain",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable LintImplUnexpectedDomain\n</p>\n<p>\nThis checks flags URLs to domains that have not been explicitly allowed for\nuse as a documentation source.\n</p>\n<p>\n</p>\n",
    "tags": [
      "lint-implementation",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LintImplUseKotlin",
    "name": "Non-Kotlin Lint Detectors",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nNew lint checks should be written in Kotlin; the Lint API is written in Kotlin\nand uses a number of language features that makes it beneficial to also write\nthe lint checks in Kotlin. Examples include many extension functions (as well\nas in UAST), default and named parameters (for the Issue registration methods\nfor example where there are methods with 12+ parameters with only a couple of\nrequired ones), and so on.\n</p>\n<p>\n</p>\n",
    "tags": [
      "lint-implementation",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LintImplUseUast",
    "name": "Using Wrong UAST Method",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUAST is a library that sits on top of PSI, and in many cases PSI is part of\nthe UAST API; for example, UResolvable#resolve returns a PsiElement.\n</p>\n<p>\nAlso, for convenience, a UClass is a PsiClass, a UMethod is a PsiMethod, and\nso on.\n</p>\n<p>\nHowever, there are some parts of the PSI API that does not work correctly when\nused in this way. For example, if you call PsiMethod#getBody or\nPsiVariable#getInitializer, this will only work in Java, not for Kotlin (or\npotentially other languages).\n</p>\n<p>\nThere are UAST specific methods you need to call instead and lint will flag\nthese.\n</p>\n<p>\n</p>\n",
    "tags": [
      "lint-implementation",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LocalSuppress",
    "name": "@SuppressLint on invalid element",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe @SuppressAnnotation is used to suppress Lint warnings in Java files.\nHowever, while many lint checks analyzes the Java source code, where they can\nfind annotations on (for example) local variables, some checks are analyzing\nthe .class files. And in class files, annotations only appear on classes,\nfields and methods. Annotations placed on local variables disappear. If you\nattempt to suppress a lint error for a class-file based lint check, the\nsuppress annotation not work. You must move the annotation out to the\nsurrounding method.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LocaleFolder",
    "name": "Wrong locale name",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFrom the java.util.Locale documentation:<br />\n&quot;Note that Java uses several deprecated two-letter codes. The Hebrew (&quot;he&quot;)\nlanguage code is rewritten as &quot;iw&quot;, Indonesian (&quot;id&quot;) as &quot;in&quot;, and Yiddish\n(&quot;yi&quot;) as &quot;ji&quot;. This rewriting happens even if you construct your own Locale\nobject, not just for instances returned by the various lookup methods.\n</p>\n<p>\nBecause of this, if you add your localized resources in for example values-he\nthey will not be used, since the system will look for values-iw instead.\n</p>\n<p>\nTo work around this, place your resources in a values folder using the\ndeprecated language code instead.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/java/util/Locale.html\">https://developer.android.com/reference/java/util/Locale.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LockedOrientationActivity",
    "name": "Incompatible screenOrientation value",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe &lt;activity&gt; element should not be locked to any orientation so that users\ncan take advantage of the multi-window environments and larger screens\navailable on Android. To fix the issue, consider declaring the corresponding\nactivity element with `screenOrientation=&quot;unspecified&quot;or &quot;fullSensor&quot;`\nattribute.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/topic/arc/window-management\">https://developer.android.com/topic/arc/window-management</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LogConditional",
    "name": "Unconditional Logging Calls",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable LogConditional\n</p>\n<p>\nThe BuildConfig class provides a constant, DEBUG, which indicates whether the\ncode is being built in release mode or in debug mode. In release mode, you\ntypically want to strip out all the logging calls. Since the compiler will\nautomatically remove all code which is inside a if (false) check, surrounding\nyour logging calls with a check for BuildConfig.DEBUG is a good idea.\n</p>\n<p>\nIf you really intend for the logging to be present in release mode, you can\nsuppress this warning with a @SuppressLint annotation for the intentional\nlogging calls.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LogTagMismatch",
    "name": "Mismatched Log Tags",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen guarding a Log.v(tag, ...) call with Log.isLoggable(tag), the tag passed\nto both calls should be the same. Similarly, the level passed in to\nLog.isLoggable should typically match the type of Log call, e.g. if checking\nlevel Log.DEBUG, the corresponding Log call should be Log.d, not Log.i.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "LongLogTag",
    "name": "Too Long Log Tags",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nLog tags are only allowed to be at most 23 tag characters long.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MangledCRLF",
    "name": "Mangled file line endings",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable MangledCRLF\n</p>\n<p>\nOn Windows, line endings are typically recorded as carriage return plus\nnewline: \\r\\n.\n</p>\n<p>\nThis detector looks for invalid line endings with repeated carriage return\ncharacters (without newlines). Previous versions of the ADT plugin could\naccidentally introduce these into the file, and when editing the file, the\neditor could produce confusing visual artifacts.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://bugs.eclipse.org/bugs/show_bug.cgi?id=375421\">https://bugs.eclipse.org/bugs/show_bug.cgi?id=375421</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ManifestOrder",
    "name": "Incorrect order of elements in manifest",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe &lt;application&gt; tag should appear after the elements which declare which\nversion you need, which features you need, which libraries you need, and so\non. In the past there have been subtle bugs (such as themes not getting\napplied correctly) when the &lt;application&gt; tag appears before some of these\nother elements, so it's best to order your manifest in the logical dependency\norder.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ManifestResource",
    "name": "Manifest Resource References",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nElements in the manifest can reference resources, but those resources cannot\nvary across configurations (except as a special case, by version, and except\nfor a few specific package attributes such as the application title and\nicon).\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "ManifestTypo",
    "name": "Typos in manifest tags",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check looks through the manifest, and if it finds any tags that look like\nlikely misspellings, they are flagged.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "MenuTitle",
    "name": "Missing menu title",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFrom the action bar documentation:<br />\n&quot;It's important that you always define android:title for each menu item &mdash; even\nif you don't declare that the title appear with the action item &mdash; for three\nreasons:<br />\n</p>\n<p>\n* If there's not enough room in the action bar for the action item, the menu\nitem appears in the overflow menu and only the title appears.\n* Screen readers for sight-impaired users read the menu item's title.\n* If the action item appears with only the icon, a user can long-press the\nitem to reveal a tool-tip that displays the action item's title.\n</p>\n<p>\nThe android:icon is always optional, but recommended.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/appbar\">https://developer.android.com/training/appbar</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MergeMarker",
    "name": "Code contains merge marker",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nMany version control systems leave unmerged files with markers such as &lt;&lt;&lt; in\nthe source code. This check looks for these markers, which are sometimes\naccidentally left in, particularly in resource files where they don't break\ncompilation.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MergeRootFrame",
    "name": "FrameLayout can be replaced with <merge> tag",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf a &lt;FrameLayout&gt; is the root of a layout and does not provide background or\npadding etc, it can often be replaced with a &lt;merge&gt; tag which is slightly\nmore efficient. Note that this depends on context, so make sure you understand\nhow the &lt;merge&gt; tag works before proceeding.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://android-developers.googleblog.com/2009/03/android-layout-tricks-3-optimize-by.html\">https://android-developers.googleblog.com/2009/03/android-layout-tricks-3-optimize-by.html</a><br />\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MinSdkTooLow",
    "name": "API Version Too Low",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable MinSdkTooLow\n</p>\n<p>\nThe value of the minSdkVersion property is too low and can be incremented\nwithout noticeably reducing the number of supported devices.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MipmapIcons",
    "name": "Use Mipmap Launcher Icons",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nLauncher icons should be provided in the mipmap resource directory. This is\nthe same as the drawable resource directory, except resources in the mipmap\ndirectory will not get stripped out when creating density-specific APKs.\n</p>\n<p>\nIn certain cases, the Launcher app may use a higher resolution asset (than\nwould normally be computed for the device) to display large app shortcuts. If\ndrawables for densities other than the device's resolution have been stripped\nout, then the app shortcut could appear blurry.\n</p>\n<p>\nTo fix this, move your launcher icons from `drawable-`dpi to `mipmap-`dpi and\nchange references from @drawable/ and R.drawable to @mipmap/ and R.mipmap.\n</p>\n<p>\nIn Android Studio this lint warning has a quickfix to perform this\nautomatically.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingApplicationIcon",
    "name": "Missing application icon",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYou should set an icon for the application as whole because there is no\ndefault. This attribute must be set as a reference to a drawable resource\ncontaining the image (for example @drawable/icon).\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/studio/publish/preparing#publishing-configure\">https://developer.android.com/studio/publish/preparing#publishing-configure</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingBackupPin",
    "name": "Missing Backup Pin",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIt is highly recommended to declare a backup &lt;pin&gt; element. Not having a\nsecond pin defined can cause connection failures when the particular site\ncertificate is rotated and the app has not yet been updated.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/preview/features/security-config.html\">https://developer.android.com/preview/features/security-config.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingClass",
    "name": "Missing registered class",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf a class is referenced in the manifest or in a layout file, it must also\nexist in the project (or in one of the libraries included by the project. This\ncheck helps uncover typos in registration names, or attempts to rename or move\nclasses without updating the XML references properly.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/manifest/manifest-intro.html\">https://developer.android.com/guide/topics/manifest/manifest-intro.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingConstraints",
    "name": "Missing Constraints in ConstraintLayout",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe layout editor allows you to place widgets anywhere on the canvas, and it\nrecords the current position with designtime attributes (such as\nlayout_editor_absoluteX). These attributes are not applied at runtime, so if\nyou push your layout on a device, the widgets may appear in a different\nlocation than shown in the editor. To fix this, make sure a widget has both\nhorizontal and vertical constraints by dragging from the edge connections.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingDefaultResource",
    "name": "Missing Default",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf a resource is only defined in folders with qualifiers like -land or -en,\nand there is no default declaration in the base folder (layout or values etc),\nthen the app will crash if that resource is accessed on a device where the\ndevice is in a configuration missing the given qualifier.\n</p>\n<p>\nAs a special case, drawables do not have to be specified in the base folder;\nif there is a match in a density folder (such as drawable-mdpi) that image\nwill be used and scaled. Note however that if you  only specify a drawable in\na folder like drawable-en-hdpi, the app will crash in non-English locales.\n</p>\n<p>\nThere may be scenarios where you have a resource, such as a -fr drawable,\nwhich is only referenced from some other resource with the same qualifiers\n(such as a -fr style), which itself has safe fallbacks. However, this still\nmakes it possible for somebody to accidentally reference the drawable and\ncrash, so it is safer to create a default fallback in the base folder.\nAlternatively, you can suppress the issue by adding\ntools:ignore=&quot;MissingDefaultResource&quot; on the element.\n</p>\n<p>\n(This scenario frequently happens with string translations, where you might\ndelete code and the corresponding resources, but forget to delete a\ntranslation. There is a dedicated issue id for that scenario, with the id\nExtraTranslation.)\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingFirebaseInstanceTokenRefresh",
    "name": "Missing Firebase Messaging Callback",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nApps that use Firebase Cloud Messaging should implement the\nFirebaseMessagingService#onNewToken() callback in order to observe token\nchanges.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://firebase.google.com/docs/cloud-messaging/android/client#monitor-token-generation\">https://firebase.google.com/docs/cloud-messaging/android/client#monitor-token-generation</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingId",
    "name": "Fragments should specify an id or tag",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf you do not specify an android:id or an android:tag attribute on a\n&lt;fragment&gt; element, then if the activity is restarted (for example for an\norientation rotation) you may lose state. From the fragment documentation:<br />\n</p>\n<p>\n&quot;Each fragment requires a unique identifier that the system can use to restore\nthe fragment if the activity is restarted (and which you can use to capture\nthe fragment to perform transactions, such as remove it).\n</p>\n<p>\n* Supply the android:id attribute with a unique ID.\n* Supply the android:tag attribute with a unique string.\n</p>\n<p>\nIf you provide neither of the previous two, the system uses the ID of the\ncontainer view.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/components/fragments.html\">https://developer.android.com/guide/components/fragments.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingInflatedId",
    "name": "ID not found in inflated resource",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nChecks calls to layout inflation and makes sure that the referenced ids are\nfound in the corresponding layout (or at least one of them, if the layout has\nmultiple configurations.)\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingIntentFilterForMediaSearch",
    "name": "Missing MEDIA_PLAY_FROM_SEARCH intent-filter",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nTo support voice searches on Android Auto, you should also register an\nintent-filter for the action android.media.action.MEDIA_PLAY_FROM_SEARCH.\n</p>\n<p>\nTo do this, add\n`&lt;intent-filter&gt;`\n    `&lt;action android:name=&quot;android.media.action.MEDIA_PLAY_FROM_SEARCH&quot; /&gt;`\n`&lt;/intent-filter&gt;`\nto your &lt;activity&gt; or &lt;service&gt;.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/auto/audio/index.html#support_voice\">https://developer.android.com/training/auto/audio/index.html#support_voice</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingLeanbackLauncher",
    "name": "Missing Leanback Launcher Intent Filter",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAn application intended to run on TV devices must declare a launcher activity\nfor TV in its manifest using a android.intent.category.LEANBACK_LAUNCHER\nintent filter.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/tv/start/start.html#tv-activity\">https://developer.android.com/training/tv/start/start.html#tv-activity</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingLeanbackSupport",
    "name": "Missing Leanback Support",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe manifest should declare the use of the Leanback user interface required by\nAndroid TV.\n</p>\n<p>\nTo fix this, add\n`&lt;uses-feature android:name=&quot;android.software.leanback&quot;\n               android:required=&quot;false&quot; /&gt;`\nto your manifest.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/tv/start/start.html#leanback-req\">https://developer.android.com/training/tv/start/start.html#leanback-req</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingMediaBrowserServiceIntentFilter",
    "name": "Missing MediaBrowserService intent-filter",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAn Automotive Media App requires an exported service that extends\nandroid.service.media.MediaBrowserService with an intent-filter for the action\nandroid.media.browse.MediaBrowserService to be able to browse and play media.\n</p>\n<p>\nTo do this, add\n`&lt;intent-filter&gt;`\n    `&lt;action android:name=&quot;android.media.browse.MediaBrowserService&quot; /&gt;`\n`&lt;/intent-filter&gt;`\nto the service that extends android.service.media.MediaBrowserService\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/auto/audio/index.html#config_manifest\">https://developer.android.com/training/auto/audio/index.html#config_manifest</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingOnPlayFromSearch",
    "name": "Missing onPlayFromSearch",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nTo support voice searches on Android Auto, in addition to adding an\nintent-filter for the action onPlayFromSearch, you also need to override and\nimplement onPlayFromSearch(String query, Bundle bundle)\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/auto/audio/index.html#support_voice\">https://developer.android.com/training/auto/audio/index.html#support_voice</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingPermission",
    "name": "Missing Permissions",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check scans through your code and libraries and looks at the APIs being\nused, and checks this against the set of permissions required to access those\nAPIs. If the code using those APIs is called at runtime, then the program will\ncrash.\n</p>\n<p>\nFurthermore, for permissions that are revocable (with targetSdkVersion 23),\nclient code must also be prepared to handle the calls throwing an exception if\nthe user rejects the request for permission at runtime.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingPrefix",
    "name": "Missing Android XML namespace",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nMost Android views have attributes in the Android namespace. When referencing\nthese attributes you must include the namespace prefix, or your attribute will\nbe interpreted by aapt as just a custom attribute.\n</p>\n<p>\nSimilarly, in manifest files, nearly all attributes should be in the android:<br />\nnamespace.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingQuantity",
    "name": "Missing quantity translation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nDifferent languages have different rules for grammatical agreement with\nquantity. In English, for example, the quantity 1 is a special case. We write\n&quot;1 book&quot;, but for any other quantity we'd write &quot;n books&quot;. This distinction\nbetween singular and plural is very common, but other languages make finer\ndistinctions.\n</p>\n<p>\nThis lint check looks at each translation of a &lt;plural&gt; and makes sure that\nall the quantity strings considered by the given language are provided by this\ntranslation.\n</p>\n<p>\nFor example, an English translation must provide a string for quantity=&quot;one&quot;.\nSimilarly, a Czech translation must provide a string for quantity=&quot;few&quot;.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/resources/string-resource.html#Plurals\">https://developer.android.com/guide/topics/resources/string-resource.html#Plurals</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingSuperCall",
    "name": "Missing Super Call",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSome methods, such as View#onDetachedFromWindow, require that you also call\nthe super implementation as part of your method.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingTranslation",
    "name": "Incomplete translation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf an application has more than one locale, then all the strings declared in\none language should also be translated in all other languages.\n</p>\n<p>\nIf the string should not be translated, you can add the attribute\ntranslatable=&quot;false&quot; on the &lt;string&gt; element, or you can define all your\nnon-translatable strings in a resource file called donottranslate.xml. Or, you\ncan ignore the issue with a tools:ignore=&quot;MissingTranslation&quot; attribute.\n</p>\n<p>\nYou can tell lint (and other tools) which language is the default language in\nyour res/values/ folder by specifying tools:locale=&quot;languageCode&quot; for the root\n&lt;resources&gt; element in your resource file. (The tools prefix refers to the\nnamespace declaration http://schemas.android.com/tools.)\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingTvBanner",
    "name": "TV Missing Banner",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nA TV application must provide a home screen banner for each localization if it\nincludes a Leanback launcher intent filter. The banner is the app launch point\nthat appears on the home screen in the apps and games rows.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/tv/start/start.html#banner\">https://developer.android.com/training/tv/start/start.html#banner</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MissingVersion",
    "name": "Missing application name/version",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYou should define the version information for your application.\n</p>\n<p>\nandroid:versionCode: An integer value that represents the version of the\napplication code, relative to other versions.\n</p>\n<p>\nandroid:versionName: A string value that represents the release version of the\napplication code, as it should be shown to users.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/studio/publish/versioning#appversioning\">https://developer.android.com/studio/publish/versioning#appversioning</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MockLocation",
    "name": "Using mock location provider in production",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsing a mock location provider (by requiring the permission\nandroid.permission.ACCESS_MOCK_LOCATION) should only be done in debug builds\n(or from tests). In Gradle projects, that means you should only request this\npermission in a test or debug source set specific manifest file.\n</p>\n<p>\nTo fix this, create a new manifest file in the debug folder and move the\n&lt;uses-permission&gt; element there. A typical path to a debug manifest override\nfile in a Gradle project is src/debug/AndroidManifest.xml.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "MotionLayoutInvalidSceneFileReference",
    "name": "layoutDescription must specify a scene file",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nA motion scene file specifies the animations used in a MotionLayout. The\nlayoutDescription is required to specify a valid motion scene file.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MotionLayoutMissingId",
    "name": "Views inside MotionLayout require an android:id",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nViews inside MotionLayout require an android:id.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MotionSceneFileValidationError",
    "name": "Validation errors in MotionScene files",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nA motion scene file specifies the animations used in a MotionLayout. This\ncheck performs various serious correctness checks in a motion scene file.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "MultipleUsesSdk",
    "name": "Multiple <uses-sdk> elements in the manifest",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe &lt;uses-sdk&gt; element should appear just once; the tools will not merge the\ncontents of all the elements so if you split up the attributes across multiple\nelements, only one of them will take effect. To fix this, just merge all the\nattributes from the various elements into a single &lt;uses-sdk&gt; element.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/manifest/uses-sdk-element.html\">https://developer.android.com/guide/topics/manifest/uses-sdk-element.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "MutatingSharedPrefs",
    "name": "Mutating an Immutable SharedPrefs Set",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAs stated in the docs for SharedPreferences.getStringSet, you must not modify\nthe set returned by getStringSet:<br />\n</p>\n<p>\n  &quot;Note that you &lt;em&gt;must not&lt;/em&gt; modify the set instance returned    by this\ncall.  The consistency of the stored data is not guaranteed    if you do, nor\nis your ability to modify the instance at all.&quot;\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NamespaceTypo",
    "name": "Misspelled namespace declaration",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAccidental misspellings in namespace declarations can lead to some very\nobscure error messages. This check looks for potential misspellings to help\ntrack these down.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "NegativeMargin",
    "name": "Negative Margins",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable NegativeMargin\n</p>\n<p>\nMargin values should be positive. Negative values are generally a sign that\nyou are making assumptions about views surrounding the current one, or may be\ntempted to turn off child clipping to allow a view to escape its parent.\nTurning off child clipping to do this not only leads to poor graphical\nperformance, it also results in wrong touch event handling since touch events\nare based strictly on a chain of parent-rect hit tests. Finally, making\nassumptions about the size of strings can lead to localization problems.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NestedScrolling",
    "name": "Nested scrolling widgets",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nA scrolling widget such as a ScrollView should not contain any nested\nscrolling widgets since this has various usability issues\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NestedWeights",
    "name": "Nested layout weights",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nLayout weights require a widget to be measured twice. When a LinearLayout with\nnon-zero weights is nested inside another LinearLayout with non-zero weights,\nthen the number of measurements increase exponentially.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NetworkSecurityConfig",
    "name": "Valid Network Security Config File",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nEnsures that a &lt;network-security-config&gt; file, which is pointed to by an\nandroid:networkSecurityConfig attribute in the manifest file, is valid\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/preview/features/security-config.html\">https://developer.android.com/preview/features/security-config.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "NewApi",
    "name": "Calling new methods on older versions",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check scans through all the Android API calls in the application and\nwarns about any calls that are not available on all versions targeted by this\napplication (according to its minimum SDK attribute in the manifest).\n</p>\n<p>\nIf you really want to use this API and don't need to support older devices\njust set the minSdkVersion in your build.gradle or AndroidManifest.xml files.\n</p>\n<p>\nIf your code is deliberately accessing newer APIs, and you have ensured (e.g.\nwith conditional execution) that this code will only ever be called on a\nsupported platform, then you can annotate your class or method with the\n@TargetApi annotation specifying the local minimum SDK to apply, such as\n@TargetApi(11), such that this check considers 11 rather than your manifest\nfile's minimum SDK as the required API level.\n</p>\n<p>\nIf you are deliberately setting android: attributes in style definitions, make\nsure you place this in a values-vNN folder in order to avoid running into\nruntime conflicts on certain devices where manufacturers have added custom\nattributes whose ids conflict with the new ones on later platforms.\n</p>\n<p>\nSimilarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that\nthe element will only be inflated in an adequate context.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NewerVersionAvailable",
    "name": "Newer Library Versions Available",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable NewerVersionAvailable\n</p>\n<p>\nThis detector checks with a central repository to see if there are newer\nversions available for the dependencies used by this project. This is similar\nto the GradleDependency check, which checks for newer versions available in\nthe Android SDK tools and libraries, but this works with any MavenCentral\ndependency, and connects to the library every time, which makes it more\nflexible but also much slower.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NfcTechWhitespace",
    "name": "Whitespace in NFC tech lists",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn a &lt;tech-list&gt;, there can be whitespace around the &lt;tech&gt; elements,but not\ninside them. This is because the code which reads in the tech list is\ncurrently very strict and will include the whitespace as part of the name.\n</p>\n<p>\nIn other words, use &lt;tech&gt;name&lt;/tech&gt;, not &lt;tech&gt; name &lt;/tech&gt;.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://issuetracker.google.com/36988969\">https://issuetracker.google.com/36988969</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "NoHardKeywords",
    "name": "No Hard Kotlin Keywords",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable NoHardKeywords\n</p>\n<p>\nDo not use Kotlin&rsquo;s hard keywords as the name of methods or fields. These\nrequire the use of backticks to escape when calling from Kotlin. Soft\nkeywords, modifier keywords, and special identifiers are allowed.\n</p>\n<p>\nFor example, Mockito&rsquo;s when function requires backticks when used from\nKotlin:<br />\nval callable = Mockito.mock(Callable::class.java)\nMockito.\\`when\\`(callable.call()).thenReturn(/* &hellip; */)\n</p>\n<p>\nMore information: <br />\n<a href=\"https://android.github.io/kotlin-guides/interop.html#no-hard-keywords\">https://android.github.io/kotlin-guides/interop.html#no-hard-keywords</a><br />\n</p>\n",
    "tags": [
      "interoperability",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NonConstantResourceId",
    "name": "Checks use of resource IDs in places requiring constants",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAvoid the usage of resource IDs where constant expressions are required.\n</p>\n<p>\nA future version of the Android Gradle Plugin will generate R classes with\nnon-constant IDs in order to improve the performance of incremental\ncompilation.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NonResizeableActivity",
    "name": "Activity is set to be non resizeable",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe &lt;activity&gt; element should be allowed to be resized to allow users to take\nadvantage of the multi-window environments available on larger screen Android\ndevices.\n</p>\n<p>\nTo fix the issue, consider declaring the corresponding activity element with\nresizableActivity=&quot;true&quot; attribute.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/topic/arc/window-management\">https://developer.android.com/topic/arc/window-management</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NotConstructor",
    "name": "Not a Constructor",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check catches methods that look like they were intended to be\nconstructors, but aren't.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NotInterpolated",
    "name": "Incorrect Interpolation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nTo insert the value of a variable, you can use ${variable} inside a string\nliteral, but only if you are using double quotes!\n</p>\n<p>\nMore information: <br />\n<a href=\"https://www.groovy-lang.org/syntax.html#_string_interpolation\">https://www.groovy-lang.org/syntax.html#_string_interpolation</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NotSibling",
    "name": "Invalid Constraints",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nLayout constraints in a given ConstraintLayout or RelativeLayout should\nreference other views within the same relative layout (but not itself!)\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "NotificationIconCompatibility",
    "name": "Notification Icon Compatibility",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nNotification icons should define a raster image to support Android versions\nbelow 5.0 (API 21). Note that the way Lint decides whether an icon is a\nnotification icon is based on the filename prefix ic_stat_. This corresponds\nto the naming convention documented in\nhttps://material.io/design/iconography/\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NotificationId0",
    "name": "Notification Id is 0",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe notification id cannot be 0; using 0 here can make the service not run in\nthe foreground.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NotificationTrampoline",
    "name": "Notification Trampolines",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nActivities should not be launched indirectly from a notification via an\nintermediate BroadcastReceiver or Service. This can lead to significant lags\nin some scenarios, and is forbidden if targetSdkVersion is set to the API\nlevel for Android 12 or higher.\n</p>\n<p>\nTo fix this, launch the Activity directly from the notification.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "NotifyDataSetChanged",
    "name": "Invalidating All RecyclerView Data",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe RecyclerView adapter's onNotifyDataSetChanged method does not specify what\nabout the data set has changed, forcing any observers to assume that all\nexisting items and structure may no longer be valid. `LayoutManager`s will be\nforced to fully rebind and relayout all visible views.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ObjectAnimatorBinding",
    "name": "Incorrect ObjectAnimator Property",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check cross references properties referenced by String from\nObjectAnimator and PropertyValuesHolder method calls and ensures that the\ncorresponding setter methods exist and have the right signatures.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ObsoleteLayoutParam",
    "name": "Obsolete layout params",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe given layout_param is not defined for the given layout, meaning it has no\neffect. This usually happens when you change the parent layout or move view\ncode around without updating the layout params. This will cause useless\nattribute processing at runtime, and is misleading for others reading the\nlayout so the parameter should be removed.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ObsoleteSdkInt",
    "name": "Obsolete SDK_INT Version Check",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check flags version checks that are not necessary, because the\nminSdkVersion (or surrounding known API level) is already at least as high as\nthe version checked for.\n</p>\n<p>\nSimilarly, it also looks for resources in -vNN folders, such as values-v14\nwhere the version qualifier is less than or equal to the minSdkVersion, where\nthe contents should be merged into the best folder.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "OldTargetApi",
    "name": "Target SDK attribute is not targeting latest version",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen your application runs on a version of Android that is more recent than\nyour targetSdkVersion specifies that it has been tested with, various\ncompatibility modes kick in. This ensures that your application continues to\nwork, but it may look out of place. For example, if the targetSdkVersion is\nless than 14, your app may get an option button in the UI.\n</p>\n<p>\nTo fix this issue, set the targetSdkVersion to the highest available value.\nThen test your app to make sure everything works correctly. You may want to\nconsult the compatibility notes to see what changes apply to each version you\nare adding support for:<br />\nhttps://developer.android.com/reference/android/os/Build.VERSION_CODES.html as\nwell as follow this guide:<br />\nhttps://developer.android.com/distribute/best-practices/develop/target-sdk.htm\nl\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/distribute/best-practices/develop/target-sdk.html\">https://developer.android.com/distribute/best-practices/develop/target-sdk.html</a><br />\nhttps://developer.android.com/reference/android/os/Build.VERSION_CODES.html\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "OnClick",
    "name": "onClick method does not exist",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe onClick attribute value should be the name of a method in this View's\ncontext to invoke when the view is clicked. This name must correspond to a\npublic method that takes exactly one parameter of type View.\n</p>\n<p>\nMust be a string value, using '\\;' to escape characters such as '\\n' or\n'\\uxxxx' for a unicode character.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "OpenForTesting",
    "name": "Extending API only allowed from tests",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nClasses or methods annotated with @OpenForTesting are only allowed to be\nsubclassed or overridden from unit tests.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Orientation",
    "name": "Missing explicit orientation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe default orientation of a LinearLayout is horizontal. It's pretty easy to\nbelieve that the layout is vertical, add multiple children to it, and wonder\nwhy only the first child is visible (when the subsequent children are off\nscreen to the right). This lint rule helps pinpoint this issue by warning\nwhenever a LinearLayout is used with an implicit orientation and multiple\nchildren.\n</p>\n<p>\nIt also checks for empty LinearLayouts without an orientation attribute that\nalso defines an id attribute. This catches the scenarios where children will\nbe added to the LinearLayout dynamically. \n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "OutdatedLibrary",
    "name": "Outdated Library",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYour app is using an outdated version of a library. This may cause violations\nof Google Play policies (see\nhttps://play.google.com/about/monetization-ads/ads/) and/or may affect your\napp&rsquo;s visibility on the Play Store.\n</p>\n<p>\nPlease try updating your app with an updated version of this library, or\nremove it from your app.\n</p>\n<p>\n</p>\n",
    "tags": [
      "compliance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Overdraw",
    "name": "Overdraw: Painting regions more than once",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf you set a background drawable on a root view, then you should use a custom\ntheme where the theme background is null. Otherwise, the theme background will\nbe painted first, only to have your custom background completely cover it;\nthis is called &quot;overdraw&quot;.\n</p>\n<p>\nNOTE: This detector relies on figuring out which layouts are associated with\nwhich activities based on scanning the Java code, and it's currently doing\nthat using an inexact pattern matching algorithm. Therefore, it can\nincorrectly conclude which activity the layout is associated with and then\nwrongly complain that a background-theme is hidden.\n</p>\n<p>\nIf you want your custom background on multiple pages, then you should consider\nmaking a custom theme with your custom background and just using that theme\ninstead of a root element background.\n</p>\n<p>\nOf course it's possible that your custom drawable is translucent and you want\nit to be mixed with the background. However, you will get better performance\nif you pre-mix the background with your drawable and use that resulting image\nor color as a custom theme background instead.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Override",
    "name": "Method conflicts with new inherited method",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSuppose you are building against Android API 8, and you've subclassed\nActivity. In your subclass you add a new method called isDestroyed(). At some\nlater point, a method of the same name and signature is added to Android. Your\nmethod will now override the Android method, and possibly break its contract.\nYour method is not calling super.isDestroyed(), since your compilation target\ndoesn't know about the method.\n</p>\n<p>\nThe above scenario is what this lint detector looks for. The above example is\nreal, since isDestroyed() was added in API 17, but it will be true for any\nmethod you have added to a subclass of an Android class where your build\ntarget is lower than the version the method was introduced in.\n</p>\n<p>\nTo fix this, either rename your method, or if you are really trying to augment\nthe builtin method if available, switch to a higher build target where you can\ndeliberately add @Override on your overriding method, and call super if\nappropriate etc.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "OverrideAbstract",
    "name": "Not overriding abstract methods on older platforms",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nTo improve the usability of some APIs, some methods that used to be abstract\nhave been made concrete by adding default implementations. This means that\nwhen compiling with new versions of the SDK, your code does not have to\noverride these methods.\n</p>\n<p>\nHowever, if your code is also targeting older versions of the platform where\nthese methods were still abstract, the code will crash. You must override all\nmethods that used to be abstract in any versions targeted by your\napplication's minSdkVersion.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "PackageManagerGetSignatures",
    "name": "Potential Multiple Certificate Exploit",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nImproper validation of app signatures could lead to issues where a malicious\napp submits itself to the Play Store with both its real certificate and a fake\ncertificate and gains access to functionality or information it shouldn't have\ndue to another application only checking for the fake certificate and ignoring\nthe rest. Please make sure to validate all signatures returned by this\nmethod.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://bluebox.com/technical/android-fake-id-vulnerability/\">https://bluebox.com/technical/android-fake-id-vulnerability/</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "PackagedPrivateKey",
    "name": "Packaged private key",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn general, you should not package private key files inside your app.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "VULNERABILITY",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "ParcelClassLoader",
    "name": "Default Parcel Class Loader",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe documentation for Parcel#readParcelable(ClassLoader) (and its variations)\nsays that you can pass in null to pick up the default class loader. However,\nthat ClassLoader is a system class loader and is not able to find classes in\nyour own application.\n</p>\n<p>\nIf you are writing your own classes into the Parcel (not just SDK classes like\nString and so on), then you should supply a ClassLoader for your application\ninstead; a simple way to obtain one is to just call\ngetClass().getClassLoader() from your own class.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/android/os/Parcel.html\">https://developer.android.com/reference/android/os/Parcel.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ParcelCreator",
    "name": "Missing Parcelable CREATOR field",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAccording to the Parcelable interface documentation, &quot;Classes implementing the\nParcelable interface must also have a static field called CREATOR, which is an\nobject implementing the Parcelable.Creator interface.&quot;\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/android/os/Parcelable.html\">https://developer.android.com/reference/android/os/Parcelable.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "PendingBindings",
    "name": "Missing Pending Bindings",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen using a ViewDataBinding in a onBindViewHolder method, you must call\nexecutePendingBindings() before the method exits; otherwise the data binding\nruntime will update the UI in the next animation frame causing a delayed\nupdate and potential jumps if the item resizes.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "PermissionImpliesUnsupportedChromeOsHardware",
    "name": "Permission Implies Unsupported Chrome OS Hardware",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable PermissionImpliesUnsupportedChromeOsHardware\n</p>\n<p>\nThe &lt;uses-permission&gt; element should not require a permission that implies an\nunsupported Chrome OS hardware feature. Google Play assumes that certain\nhardware related permissions indicate that the underlying hardware features\nare required by default. To fix the issue, consider declaring the\ncorresponding uses-feature element with required=&quot;false&quot; attribute.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/topic/arc/manifest.html#implied-features\">https://developer.android.com/topic/arc/manifest.html#implied-features</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "PermissionImpliesUnsupportedHardware",
    "name": "Permission Implies Unsupported Hardware",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe &lt;uses-permission&gt; element should not require a permission that implies an\nunsupported TV hardware feature. Google Play assumes that certain hardware\nrelated permissions indicate that the underlying hardware features are\nrequired by default. To fix the issue, consider declaring the corresponding\nuses-feature element with required=&quot;false&quot; attribute.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/manifest/uses-feature-element.html#permissions\">https://developer.android.com/guide/topics/manifest/uses-feature-element.html#permissions</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "PinSetExpiry",
    "name": "Validate <pin-set> expiration attribute",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nEnsures that the expiration attribute of the &lt;pin-set&gt; element is valid and\nhas not already expired or is expiring soon\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/preview/features/security-config.html\">https://developer.android.com/preview/features/security-config.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "PluralsCandidate",
    "name": "Potential Plurals",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis lint check looks for potential errors in internationalization where you\nhave translated a message which involves a quantity and it looks like other\nparts of the string may need grammatical changes.\n</p>\n<p>\nFor example, rather than something like this:<br />\n  &lt;string name=&quot;try_again&quot;&gt;Try again in %d seconds.&lt;/string&gt;\nyou should be using a plural:<br />\n   &lt;plurals name=&quot;try_again&quot;&gt;\n        &lt;item quantity=&quot;one&quot;&gt;Try again in %d second&lt;/item&gt;\n        &lt;item quantity=&quot;other&quot;&gt;Try again in %d seconds&lt;/item&gt;\n    &lt;/plurals&gt;\nThis will ensure that in other languages the right set of translations are\nprovided for the different quantity classes.\n</p>\n<p>\n(This check depends on some heuristics, so it may not accurately determine\nwhether a string really should be a quantity. You can use tools:ignore to\nfilter out false positives.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/resources/string-resource.html#Plurals\">https://developer.android.com/guide/topics/resources/string-resource.html#Plurals</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "PrivateApi",
    "name": "Using Private APIs",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsing reflection to access hidden/private Android APIs is not safe; it will\noften not work on devices from other vendors, and it may suddenly stop working\n(if the API is removed) or crash spectacularly (if the API behavior changes,\nsince there are no guarantees for compatibility).\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/preview/restrictions-non-sdk-interfaces\">https://developer.android.com/preview/restrictions-non-sdk-interfaces</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "PrivateResource",
    "name": "Using private resources",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nPrivate resources should not be referenced; the may not be present everywhere,\nand even where they are they may disappear without notice.\n</p>\n<p>\nTo fix this, copy the resource into your own project instead.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Proguard",
    "name": "Using obsolete ProGuard configuration",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsing -keepclasseswithmembernames in a proguard config file is not correct; it\ncan cause some symbols to be renamed which should not be.\n</p>\n<p>\nEarlier versions of ADT used to create proguard.cfg files with the wrong\nformat. Instead of -keepclasseswithmembernames use -keepclasseswithmembers,\nsince the old flags also implies &quot;allow shrinking&quot; which means symbols only\nreferred to from XML and not Java (such as possibly CustomViews) can get\ndeleted.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://issuetracker.google.com/36928077\">https://issuetracker.google.com/36928077</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "ProguardSplit",
    "name": "Proguard.cfg file contains generic Android rules",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nEarlier versions of the Android tools bundled a single proguard.cfg file\ncontaining a ProGuard configuration file suitable for Android shrinking and\nobfuscation. However, that version was copied into new projects, which means\nthat it does not continue to get updated as we improve the default ProGuard\nrules for Android.\n</p>\n<p>\nIn the new version of the tools, we have split the ProGuard configuration into\ntwo halves:<br />\n* A simple configuration file containing only project-specific flags, in your\nproject\n* A generic configuration file containing the recommended set of ProGuard\noptions for Android projects. This generic file lives in the SDK install\ndirectory which means that it gets updated along with the tools.\n</p>\n<p>\nIn order for this to work, the proguard.config property in the\nproject.properties file now refers to a path, so you can reference both the\ngeneric file as well as your own (and any additional files too).\n</p>\n<p>\nTo migrate your project to the new setup, create a new proguard-project.txt\nfile in your project containing any project specific ProGuard flags as well as\nany customizations you have made, then update your project.properties file to\ncontain:<br />\nproguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-projec\nt.txt\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "PropertyEscape",
    "name": "Incorrect property escapes",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAll backslashes and colons in .property files must be escaped with a backslash\n(). This means that when writing a Windows path, you must escape the file\nseparators, so the path MyFiles should be written as key=\\\\My\\\\Files.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ProtectedPermissions",
    "name": "Using system app permission",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nPermissions with the protection level signature, privileged or\nsignatureOrSystem are only granted to system apps. If an app is a regular\nnon-system app, it will never be able to use these permissions.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ProxyPassword",
    "name": "Proxy Password in Cleartext",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nStoring proxy server passwords in clear text is dangerous if this file is\nshared via version control. If this is deliberate or this is a truly private\nproject, suppress this warning.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "PxUsage",
    "name": "Using 'px' dimension",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFor performance reasons and to keep the code simpler, the Android system uses\npixels as the standard unit for expressing dimension or coordinate values.\nThat means that the dimensions of a view are always expressed in the code\nusing pixels, but always based on the current screen density. For instance, if\nmyView.getWidth() returns 10, the view is 10 pixels wide on the current\nscreen, but on a device with a higher density screen, the value returned might\nbe 15. If you use pixel values in your application code to work with bitmaps\nthat are not pre-scaled for the current screen density, you might need to\nscale the pixel values that you use in your code to match the un-scaled bitmap\nsource.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/practices/screens_support.html#screen-independence\">https://developer.android.com/guide/practices/screens_support.html#screen-independence</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "QueryAllPackagesPermission",
    "name": "Using the QUERY_ALL_PACKAGES permission",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf you need to query or interact with other installed apps, you should be\nusing a &lt;queries&gt; declaration in your manifest. Using the QUERY_ALL_PACKAGES\npermission in order to see all installed apps is rarely necessary, and most\napps on Google Play are not allowed to have this permission.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://g.co/dev/packagevisibility\">https://g.co/dev/packagevisibility</a><br />\n</p>\n",
    "tags": [
      "compliance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "QueryPermissionsNeeded",
    "name": "Using APIs affected by query permissions",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nApps that target Android 11 cannot query or interact with other installed apps\nby default. If you need to query or interact with other installed apps, you\nmay need to add a &lt;queries&gt; declaration in your manifest.\n</p>\n<p>\nAs a corollary, the methods PackageManager#getInstalledPackages and\nPackageManager#getInstalledApplications will no longer return information\nabout all installed apps. To query specific apps or types of apps, you can use\nmethods like PackageManager#getPackageInfo or\nPackageManager#queryIntentActivities.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://g.co/dev/packagevisibility\">https://g.co/dev/packagevisibility</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Range",
    "name": "Outside Range",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSome parameters are required to in a particular numerical range; this check\nmakes sure that arguments passed fall within the range. For arrays, Strings\nand collections this refers to the size or length.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Recycle",
    "name": "Missing recycle() calls",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nMany resources, such as TypedArrays, VelocityTrackers, etc., should be\nrecycled (with a recycle() call) after use. This lint check looks for missing\nrecycle() calls.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RecyclerView",
    "name": "RecyclerView Problems",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nRecyclerView will not call onBindViewHolder again when the position of the\nitem changes in the data set unless the item itself is invalidated or the new\nposition cannot be determined.\n</p>\n<p>\nFor this reason, you should only use the position parameter while acquiring\nthe related data item inside this method, and should not keep a copy of it.\n</p>\n<p>\nIf you need the position of an item later on (e.g. in a click listener), use\ngetAdapterPosition() which will have the updated adapter position.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RedundantLabel",
    "name": "Redundant label on activity",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen an activity does not have a label attribute, it will use the one from the\napplication tag. Since the application has already specified the same label,\nthe label on this activity can be omitted.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RedundantNamespace",
    "name": "Redundant namespace",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn Android XML documents, only specify the namespace on the root/document\nelement. Namespace declarations elsewhere in the document are typically\naccidental leftovers from copy/pasting XML from other files or documentation.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ReferenceType",
    "name": "Incorrect reference types",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen you generate a resource alias, the resource you are pointing to must be\nof the same type as the alias\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "Registered",
    "name": "Class is not registered in the manifest",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable Registered\n</p>\n<p>\nActivities, services and content providers should be registered in the\nAndroidManifest.xml file using &lt;activity&gt;, &lt;service&gt; and &lt;provider&gt; tags.\n</p>\n<p>\nIf your activity is simply a parent class intended to be subclassed by other\n&quot;real&quot; activities, make it an abstract class.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/manifest/manifest-intro.html\">https://developer.android.com/guide/topics/manifest/manifest-intro.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RelativeOverlap",
    "name": "Overlapping items in RelativeLayout",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf relative layout has text or button items aligned to left and right sides\nthey can overlap each other due to localized text expansion unless they have\nmutual constraints like toEndOf/toStartOf.\n</p>\n<p>\n</p>\n<p>\nInternationalization:Bidirectional Text\n=======================================\n</p>\n",
    "tags": [
      "i18n",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RemoteViewLayout",
    "name": "Unsupported View in RemoteView",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn a RemoteView, only some layouts and views are allowed.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/android/widget/RemoteViews\">https://developer.android.com/reference/android/widget/RemoteViews</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RequiredSize",
    "name": "Missing layout_width or layout_height attributes",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable RequiredSize\n</p>\n<p>\nAll views must specify an explicit layout_width and layout_height attribute.\nThere is a runtime check for this, so if you fail to specify a size, an\nexception is thrown at runtime.\n</p>\n<p>\nIt's possible to specify these widths via styles as well. GridLayout, as a\nspecial case, does not require you to specify a size.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RequiresFeature",
    "name": "Requires Feature",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSome APIs require optional features to be present. This check makes sure that\ncalls to these APIs are surrounded by a check which enforces this.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ResAuto",
    "name": "Hardcoded Package in Namespace",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn Gradle projects, the actual package used in the final APK can vary; for\nexample,you can add a .debug package suffix in one version and not the other.\nTherefore, you should not hardcode the application package in the resource;\ninstead, use the special namespace http://schemas.android.com/apk/res-auto\nwhich will cause the tools to figure out the right namespace for the resource\nregardless of the actual package used during the build.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "ResourceAsColor",
    "name": "Should pass resolved color instead of resource id",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nMethods that take a color in the form of an integer should be passed an RGB\ntriple, not the actual color resource id. You must call\ngetResources().getColor(resource) to resolve the actual color value first.\n</p>\n<p>\nSimilarly, methods that take a dimension integer should be passed an actual\ndimension (call getResources().getDimension(resource)\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ResourceCycle",
    "name": "Cycle in resource definitions",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThere should be no cycles in resource definitions as this can lead to runtime\nexceptions.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "ResourceName",
    "name": "Resource with Wrong Prefix",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn Gradle projects you can specify a resource prefix that all resources in the\nproject must conform to. This makes it easier to ensure that you don't\naccidentally combine resources from different libraries, since they all end up\nin the same shared app namespace.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "ResourceType",
    "name": "Wrong Resource Type",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nEnsures that resource id's passed to APIs are of the right type; for example,\ncalling Resources.getColor(R.string.name) is wrong.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RestrictedApi",
    "name": "Restricted API",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis API has been flagged with a restriction that has not been met.\n</p>\n<p>\nExamples of API restrictions:<br />\n* Method can only be invoked by a subclass\n* Method can only be accessed from within the same library (defined by the\nGradle library group id)\n* Method can only be accessed from tests.\n</p>\n<p>\nYou can add your own API restrictions with the @RestrictTo annotation.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ReturnThis",
    "name": "Method must return this",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nMethods annotated with @ReturnThis (usually in the super method that this\nmethod is overriding) should also return this.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RiskyLibrary",
    "name": "Libraries with Privacy or Security Risks",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYour app is using a version of a library that has been identified by the\nlibrary developer as a potential source of privacy and/or security risks. This\nmay be a violation of Google Play policies (see\nhttps://play.google.com/about/monetization-ads/ads/) and/or affect your app&rsquo;s\nvisibility on the Play Store.\n</p>\n<p>\nWhen available, the individual error messages from lint will include details\nabout the reasons for this advisory.\n</p>\n<p>\nPlease try updating your app with an updated version of this library, or\nremove it from your app.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RtlCompat",
    "name": "Right-to-left text compatibility issues",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAPI 17 adds a textAlignment attribute to specify text alignment. However, if\nyou are supporting older versions than API 17, you must also specify a gravity\nor layout_gravity attribute, since older platforms will ignore the\ntextAlignment attribute.\n</p>\n<p>\n</p>\n",
    "tags": [
      "i18n",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RtlEnabled",
    "name": "Using RTL attributes without enabling RTL support",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nTo enable right-to-left support, when running on API 17 and higher, you must\nset the android:supportsRtl attribute in the manifest &lt;application&gt; element.\n</p>\n<p>\nIf you have started adding RTL attributes, but have not yet finished the\nmigration, you can set the attribute to false to satisfy this lint check.\n</p>\n<p>\n</p>\n",
    "tags": [
      "i18n",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RtlHardcoded",
    "name": "Using left/right instead of start/end attributes",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsing Gravity#LEFT and Gravity#RIGHT can lead to problems when a layout is\nrendered in locales where text flows from right to left. Use Gravity#START and\nGravity#END instead. Similarly, in XML gravity and layout_gravity attributes,\nuse start rather than left.\n</p>\n<p>\nFor XML attributes such as paddingLeft and layout_marginLeft, use paddingStart\nand layout_marginStart. NOTE: If your minSdkVersion is less than 17, you\nshould add both the older left/right attributes as well as the new start/end\nattributes. On older platforms, where RTL is not supported and the start/end\nattributes are unknown and therefore ignored, you need the older left/right\nattributes. There is a separate lint check which catches that type of error.\n</p>\n<p>\n(Note: For Gravity#LEFT and Gravity#START, you can use these constants even\nwhen targeting older platforms, because the start bitmask is a superset of the\nleft bitmask. Therefore, you can use gravity=&quot;start&quot; rather than\ngravity=&quot;left|start&quot;.)\n</p>\n<p>\n</p>\n",
    "tags": [
      "i18n",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "RtlSymmetry",
    "name": "Padding and margin symmetry",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf you specify padding or margin on the left side of a layout, you should\nprobably also specify padding on the right side (and vice versa) for\nright-to-left layout symmetry.\n</p>\n<p>\n</p>\n",
    "tags": [
      "i18n",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SQLiteString",
    "name": "Using STRING instead of TEXT",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn SQLite, any column can store any data type; the declared type for a column\nis more of a hint as to what the data should be cast to when stored.\n</p>\n<p>\nThere are many ways to store a string. TEXT, VARCHAR, CHARACTER and CLOB are\nstring types, but `STRING` is not. Columns defined as STRING are actually\nnumeric.\n</p>\n<p>\nIf you try to store a value in a numeric column, SQLite will try to cast it to\na float or an integer before storing. If it can't, it will just store it as a\nstring.\n</p>\n<p>\nThis can lead to some subtle bugs. For example, when SQLite encounters a\nstring like 1234567e1234, it will parse it as a float, but the result will be\nout of range for floating point numbers, so Inf will be stored! Similarly,\nstrings that look like integers will lose leading zeroes.\n</p>\n<p>\nTo fix this, you can change your schema to use a TEXT type instead.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://www.sqlite.org/datatype3.html\">https://www.sqlite.org/datatype3.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SSLCertificateSocketFactoryCreateSocket",
    "name": "Insecure call to SSLCertificateSocketFactory.createSocket()",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen SSLCertificateSocketFactory.createSocket() is called with an InetAddress\nas the first parameter, TLS/SSL hostname verification is not performed, which\ncould result in insecure network traffic caused by trusting arbitrary\nhostnames in TLS/SSL certificates presented by peers. In this case, developers\nmust ensure that the InetAddress is explicitly verified against the\ncertificate through other means, such as by calling\n`SSLCertificateSocketFactory.getDefaultHostnameVerifier() to get a\nHostnameVerifier and calling HostnameVerifier.verify().\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SSLCertificateSocketFactoryGetInsecure",
    "name": "Call to SSLCertificateSocketFactory.getInsecure()",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe SSLCertificateSocketFactory.getInsecure() method returns an\nSSLSocketFactory with all TLS/SSL security checks disabled, which could result\nin insecure network traffic caused by trusting arbitrary TLS/SSL certificates\npresented by peers. This method should be avoided unless needed for a special\ncircumstance such as debugging. Instead,\nSSLCertificateSocketFactory.getDefault() should be used.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ScopedStorage",
    "name": "Affected by scoped storage",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nScoped storage is enforced on Android 10+ (or Android 11+ if using\nrequestLegacyExternalStorage). In particular, WRITE_EXTERNAL_STORAGE will no\nlonger provide write access to all files; it will provide the equivalent of\nREAD_EXTERNAL_STORAGE instead.\n</p>\n<p>\nThe MANAGE_EXTERNAL_STORAGE permission can be used to manage all files, but it\nis rarely necessary and most apps on Google Play are not allowed to use it.\nMost apps should instead migrate to use scoped storage. To modify or delete\nfiles, apps should request write access from the user as described at\nhttps://goo.gle/android-mediastore-createwriterequest.\n</p>\n<p>\nTo learn more, read these resources: Play policy:<br />\nhttps://goo.gle/policy-storage-help Allowable use cases:<br />\nhttps://goo.gle/policy-storage-usecases\n</p>\n<p>\nMore information: <br />\n<a href=\"https://goo.gle/android-storage-usecases\">https://goo.gle/android-storage-usecases</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ScrollViewCount",
    "name": "ScrollView can have only one child",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nA ScrollView can only have one child widget. If you want more children, wrap\nthem in a container layout.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ScrollViewSize",
    "name": "ScrollView size validation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nScrollView children must set their layout_width or layout_height attributes to\nwrap_content rather than fill_parent or match_parent in the scrolling\ndimension\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SdCardPath",
    "name": "Hardcoded reference to /sdcard",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYour code should not reference the /sdcard path directly; instead use\nEnvironment.getExternalStorageDirectory().getPath().\n</p>\n<p>\nSimilarly, do not reference the /data/data/ path directly; it can vary in\nmulti-user scenarios. Instead, use Context.getFilesDir().getPath().\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/data-storage#filesExternal\">https://developer.android.com/training/data-storage#filesExternal</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SecureRandom",
    "name": "Using a fixed seed with SecureRandom",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSpecifying a fixed seed will cause the instance to return a predictable\nsequence of numbers. This may be useful for testing but it is not appropriate\nfor secure use.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/java/security/SecureRandom.html\">https://developer.android.com/reference/java/security/SecureRandom.html</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SelectableText",
    "name": "Dynamic text should probably be selectable",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable SelectableText\n</p>\n<p>\nIf a &lt;TextView&gt; is used to display data, the user might want to copy that data\nand paste it elsewhere. To allow this, the &lt;TextView&gt; should specify\nandroid:textIsSelectable=&quot;true&quot;.\n</p>\n<p>\nThis lint check looks for TextViews which are likely to be displaying data:<br />\nviews whose text is set dynamically.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ServiceCast",
    "name": "Wrong system service casts",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen you call Context#getSystemService(), the result is typically cast to a\nspecific interface. This lint check ensures that the cast is compatible with\nthe expected type of the return value.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SetJavaScriptEnabled",
    "name": "Using setJavaScriptEnabled",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYour code should not invoke setJavaScriptEnabled if you are not sure that your\napp really requires JavaScript support.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/articles/security-tips\">https://developer.android.com/training/articles/security-tips</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SetTextI18n",
    "name": "TextView Internationalization",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen calling TextView#setText\n* Never call Number#toString() to format numbers; it will not handle fraction\nseparators and locale-specific digits properly. Consider using String#format\nwith proper format specifications (%d or %f) instead.\n* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text\ncan not be properly translated to other languages. Consider using Android\nresource strings instead.\n* Do not build messages by concatenating text chunks. Such messages can not be\nproperly translated.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/resources/localization.html\">https://developer.android.com/guide/topics/resources/localization.html</a><br />\n</p>\n",
    "tags": [
      "i18n",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SetWorldReadable",
    "name": "File.setReadable() used to make file world-readable",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSetting files world-readable is very dangerous, and likely to cause security\nholes in applications. It is strongly discouraged; instead, applications\nshould use more formal mechanisms for interactions such as ContentProvider,\nBroadcastReceiver, and Service.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SetWorldWritable",
    "name": "File.setWritable() used to make file world-writable",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSetting files world-writable is very dangerous, and likely to cause security\nholes in applications. It is strongly discouraged; instead, applications\nshould use more formal mechanisms for interactions such as ContentProvider,\nBroadcastReceiver, and Service.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ShiftFlags",
    "name": "Dangerous Flag Constant Declaration",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen defining multiple constants for use in flags, the recommended style is to\nuse the form 1 &lt;&lt; 2, 1 &lt;&lt; 3, 1 &lt;&lt; 4 and so on to ensure that the constants are\nunique and non-overlapping.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ShortAlarm",
    "name": "Short or Frequent Alarm",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFrequent alarms are bad for battery life. As of API 22, the AlarmManager will\noverride near-future and high-frequency alarm requests, delaying the alarm at\nleast 5 seconds into the future and ensuring that the repeat interval is at\nleast 60 seconds.\n</p>\n<p>\nIf you really need to do work sooner than 5 seconds, post a delayed message or\nrunnable to a Handler.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ShowToast",
    "name": "Toast created but not shown",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nToast.makeText() creates a Toast but does not show it. You must call show() on\nthe resulting object to actually make the Toast appear.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SignatureOrSystemPermissions",
    "name": "Declaring signatureOrSystem permissions",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe signature protection level should probably be sufficient for most needs\nand works regardless of where applications are installed. The\nsignatureOrSystem level is used for certain situations where multiple vendors\nhave applications built into a system image and need to share specific\nfeatures explicitly because they are being built together.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SimpleDateFormat",
    "name": "Implied locale in date format",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAlmost all callers should use getDateInstance(), getDateTimeInstance(), or\ngetTimeInstance() to get a ready-made instance of SimpleDateFormat suitable\nfor the user's locale. The main reason you'd create an instance this class\ndirectly is because you need to format/parse a specific machine-readable\nformat, in which case you almost certainly want to explicitly ask for US to\nensure that you get ASCII digits (rather than, say, Arabic digits).\n</p>\n<p>\nTherefore, you should either use the form of the SimpleDateFormat constructor\nwhere you pass in an explicit locale, such as Locale.US, or use one of the get\ninstance methods, or suppress this error if really know what you are doing.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/java/text/SimpleDateFormat.html\">https://developer.android.com/reference/java/text/SimpleDateFormat.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Slices",
    "name": "Slices",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check analyzes usages of the Slices API and offers suggestions based on\nbest practices.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SmallSp",
    "name": "Text size is too small",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAvoid using sizes smaller than 11sp.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SoonBlockedPrivateApi",
    "name": "Using Soon-to-Be Blocked Private API",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsage of restricted non-SDK interface will throw an exception at runtime.\nAccessing non-SDK methods or fields through reflection has a high likelihood\nto break your app between versions, and is being restricted to facilitate\nfuture app compatibility.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/preview/restrictions-non-sdk-interfaces\">https://developer.android.com/preview/restrictions-non-sdk-interfaces</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SourceLockedOrientationActivity",
    "name": "Incompatible setRequestedOrientation value",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe Activity should not be locked to a portrait orientation so that users can\ntake advantage of the multi-window environments and larger landscape-first\nscreens that Android runs on such as Chrome OS. To fix the issue, consider\ncalling setRequestedOrientation with the\nActivityInfo.SCREEN_ORIENTATION_FULL_SENSOR or\nActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED options or removing the call all\ntogether.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SpUsage",
    "name": "Using dp instead of sp for text sizes",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen setting text sizes, you should normally use sp, or &quot;scale-independent\npixels&quot;. This is like the dp unit, but it is also scaled by the user's font\nsize preference. It is recommend you use this unit when specifying font sizes,\nso they will be adjusted for both the screen density and the user's\npreference.\n</p>\n<p>\nThere are cases where you might need to use dp; typically this happens when\nthe text is in a container with a specific dp-size. This will prevent the text\nfrom spilling outside the container. Note however that this means that the\nuser's font size settings are not respected, so consider adjusting the layout\nitself to be more flexible.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/multiscreen/screendensities.html\">https://developer.android.com/training/multiscreen/screendensities.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "StateListReachable",
    "name": "Unreachable state in a <selector>",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn a selector, only the last child in the state list should omit a state\nqualifier. If not, all subsequent items in the list will be ignored since the\ngiven item will match all.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "StaticFieldLeak",
    "name": "Static Field Leaks",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nA static field will leak contexts.\n</p>\n<p>\nNon-static inner classes have an implicit reference to their outer class. If\nthat outer class is for example a Fragment or Activity, then this reference\nmeans that the long-running handler/loader/task will hold a reference to the\nactivity which prevents it from getting garbage collected.\n</p>\n<p>\nSimilarly, direct field references to activities and fragments from these\nlonger running instances can cause leaks.\n</p>\n<p>\nViewModel classes should never point to Views or non-application Contexts.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "StopShip",
    "name": "Code contains STOPSHIP marker",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable StopShip\n</p>\n<p>\nUsing the comment // STOPSHIP can be used to flag code that is incomplete but\nchecked in. This comment marker can be used to indicate that the code should\nnot be shipped until the issue is addressed, and lint will look for these. In\nGradle projects, this is only checked for non-debug (release) builds.\n</p>\n<p>\nIn Kotlin, the TODO() method is also treated as a stop ship marker; you can\nuse it to make incomplete code compile, but it will throw an exception at\nruntime and therefore should be fixed before shipping releases.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "StringEscaping",
    "name": "Invalid string escapes",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nApostrophes (') must always be escaped (with a \\\\), unless they appear in a\nstring which is itself escaped in double quotes (&quot;).\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "StringFormatCount",
    "name": "Formatting argument types incomplete or inconsistent",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen a formatted string takes arguments, it usually needs to reference the\nsame arguments in all translations (or all arguments if there are no\ntranslations.\n</p>\n<p>\nThere are cases where this is not the case, so this issue is a warning rather\nthan an error by default. However, this usually happens when a language is not\ntranslated or updated correctly.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "StringFormatInvalid",
    "name": "Invalid format string",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf a string contains a '%' character, then the string may be a formatting\nstring which will be passed to String.format from Java code to replace each\n'%' occurrence with specific values.\n</p>\n<p>\nThis lint warning checks for two related problems:<br />\n(1) Formatting strings that are invalid, meaning that String.format will throw\nexceptions at runtime when attempting to use the format string.\n(2) Strings containing '%' that are not formatting strings getting passed to a\nString.format call. In this case the '%' will need to be escaped as '%%'.\n</p>\n<p>\nNOTE: Not all Strings which look like formatting strings are intended for use\nby String.format; for example, they may contain date formats intended for\nandroid.text.format.Time#format(). Lint cannot always figure out that a String\nis a date format, so you may get false warnings in those scenarios. See the\nsuppress help topic for information on how to suppress errors in that case.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "StringFormatMatches",
    "name": "String.format string doesn't match the XML format string",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis lint check ensures the following:<br />\n(1) If there are multiple translations of the format string, then all\ntranslations use the same type for the same numbered arguments\n(2) The usage of the format string in Java is consistent with the format\nstring, meaning that the parameter types passed to String.format matches those\nin the format string.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "StringFormatTrivial",
    "name": "String.format string only contains trivial conversions",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable StringFormatTrivial\n</p>\n<p>\nEvery call to String.format creates a new Formatter instance, which will\ndecrease the performance of your app. String.format should only be used when\nnecessary--if the formatted string contains only trivial conversions (e.g. b,\ns, c) and there are no translation concerns, it will be more efficient to\nreplace them and concatenate with +.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "StringShouldBeInt",
    "name": "String should be int",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe properties compileSdkVersion, minSdkVersion and targetSdkVersion are\nusually numbers, but can be strings when you are using an add-on (in the case\nof compileSdkVersion) or a preview platform (for the other two properties).\n</p>\n<p>\nHowever, you can not use a number as a string (e.g. &quot;19&quot; instead of 19); that\nwill result in a platform not found error message at build/sync time.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SupportAnnotationUsage",
    "name": "Incorrect support annotation usage",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis lint check makes sure that the support annotations (such as @IntDef and\n@ColorInt) are used correctly. For example, it's an error to specify an\n@IntRange where the from value is higher than the to value.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Suspicious0dp",
    "name": "Suspicious 0dp dimension",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsing 0dp as the width in a horizontal LinearLayout with weights is a useful\ntrick to ensure that only the weights (and not the intrinsic sizes) are used\nwhen sizing the children.\n</p>\n<p>\nHowever, if you use 0dp for the opposite dimension, the view will be\ninvisible. This can happen if you change the orientation of a layout without\nalso flipping the 0dp dimension in all the children.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SuspiciousImport",
    "name": "'import android.R' statement",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nImporting android.R is usually not intentional; it sometimes happens when you\nuse an IDE and ask it to automatically add imports at a time when your\nproject's R class it not present.\n</p>\n<p>\nOnce the import is there you might get a lot of &quot;confusing&quot; error messages\nbecause of course the fields available on android.R are not the ones you'd\nexpect from just looking at your own R class.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SuspiciousIndentation",
    "name": "Suspicious indentation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check looks for cases where the indentation suggests a grouping that\nisn't actually there in the code. A common example of this would be something\nlike\nif (column &gt; width)\n    line++\n    column = 0\nHere, the column = 0 line will be executed every single time, not just if the\ncondition is true.\n</p>\n<p>\nAvailable options:<br />\n</p>\n<p>\nalways-run (default is false):<br />\nWhether this check should be included while editing.\n</p>\n<p>\nWhile you're editing, it's common to have a temporary situation where you have suspicious indentation scenarios -- e.g. you start typing an if statement on the line above something you want to make conditional, and you haven't indented it yet. It can be distracting and misleading to suddenly have both statements light up as errors. Therefore, lint will avoid including this check when running on the fly in the editor, unless it looks like the file has not been recently edited. With this option, you can turn it on in all cases.\n</p>\n<p>\nTo configure this option, use a lint.xml file with an &lt;option&gt; like this:<br />\n</p>\n<p>\n&lt;lint&gt;\n    &lt;issue id=&quot;SuspiciousIndentation&quot;&gt;\n        &lt;option name=&quot;always-run&quot; value=&quot;false&quot; /&gt;\n    &lt;/issue&gt;\n&lt;/lint&gt;\n</p>\n<p>\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SwitchIntDef",
    "name": "Missing @IntDef in Switch",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check warns if a switch statement does not explicitly include all the\nvalues declared by the typedef @IntDef declaration.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "SyntheticAccessor",
    "name": "Synthetic Accessor",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable SyntheticAccessor\n</p>\n<p>\nA private inner class which is accessed from the outer class will force the\ncompiler to insert a synthetic accessor; this means that you are causing extra\noverhead. This is not important in small projects, but is important for large\napps running up against the 64K method handle limit, and especially for\nlibraries where you want to make sure your library is as small as possible for\nthe cases where your library is used in an app running up against the 64K\nlimit.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TestAppLink",
    "name": "Unmatched URLs",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsing one or more tools:validation testUrl=&quot;some url&quot;/&gt; elements in your\nmanifest allows the link attributes in your intent filter to be checked for\nmatches.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "TextFields",
    "name": "Missing inputType",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nProviding an inputType attribute on a text field improves usability because\ndepending on the data to be input, optimized keyboards can be shown to the\nuser (such as just digits and parentheses for a phone number). \n</p>\n<p>\nThe lint detector also looks at the id of the view, and if the id offers a\nhint of the purpose of the field (for example, the id contains the phrase\nphone or email), then lint will also ensure that the inputType contains the\ncorresponding type attributes.\n</p>\n<p>\nIf you really want to keep the text field generic, you can suppress this\nwarning by setting inputType=&quot;text&quot;.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TextViewEdits",
    "name": "TextView should probably be an EditText instead",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsing a &lt;TextView&gt; to input text is generally an error, you should be using\n&lt;EditText&gt; instead.  EditText is a subclass of TextView, and some of the\nediting support is provided by TextView, so it's possible to set some\ninput-related properties on a TextView. However, using a TextView along with\ninput attributes is usually a cut &amp; paste error. To input text you should be\nusing &lt;EditText&gt;.\n</p>\n<p>\nThis check also checks subclasses of TextView, such as Button and CheckBox,\nsince these have the same issue: they should not be used with editable\nattributes.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TileProviderPermissions",
    "name": "TileProvider does not set permission",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nTileProviders should require the\ncom.google.android.wearable.permission.BIND_TILE_PROVIDER permission to\nprevent arbitrary apps from binding to it.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TooDeepLayout",
    "name": "Layout hierarchy is too deep",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nLayouts with too much nesting is bad for performance. Consider using a flatter\nlayout (such as RelativeLayout or GridLayout).The default maximum depth is 10\nbut can be configured with the environment variable ANDROID_LINT_MAX_DEPTH.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TooManyViews",
    "name": "Layout has too many views",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsing too many views in a single layout is bad for performance. Consider using\ncompound drawables or other tricks for reducing the number of views in this\nlayout.\n</p>\n<p>\nThe maximum view count defaults to 80 but can be configured with the\nenvironment variable ANDROID_LINT_MAX_VIEW_COUNT.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TranslucentOrientation",
    "name": "Mixing screenOrientation and translucency",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSpecifying a fixed screen orientation with a translucent theme isn't supported\non apps with targetSdkVersion O or greater since there can be an another\nactivity visible behind your activity with a conflicting request.\n</p>\n<p>\nFor example, your activity requests landscape and the visible activity behind\nyour translucent activity request portrait. In this case the system can only\nhonor one of the requests and currently prefers to honor the request from\nnon-translucent activities since there is nothing visible behind them.\n</p>\n<p>\nDevices running platform version O or greater will throw an exception in your\napp if this state is detected.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TrulyRandom",
    "name": "Weak RNG",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nKey generation, signing, encryption, and random number generation may not\nreceive cryptographically strong values due to improper initialization of the\nunderlying PRNG on Android 4.3 and below.\n</p>\n<p>\nIf your application relies on cryptographically secure random number\ngeneration you should apply the workaround described in\nhttps://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.htm\nl .\n</p>\n<p>\nThis lint rule is mostly informational; it does not accurately detect whether\ncryptographically secure RNG is required, or whether the workaround has\nalready been applied. After reading the blog entry and updating your code if\nnecessary, you can disable this lint issue.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html\">https://android-developers.blogspot.com/2013/08/some-securerandom-thoughts.html</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TrustAllX509TrustManager",
    "name": "Insecure TLS/SSL trust manager",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check looks for X509TrustManager implementations whose checkServerTrusted\nor checkClientTrusted methods do nothing (thus trusting any certificate chain)\nwhich could result in insecure network traffic caused by trusting arbitrary\nTLS/SSL certificates presented by peers.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TypographyDashes",
    "name": "Hyphen can be replaced with dash",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe &quot;n dash&quot; (u2013, &amp;#8211;) and the &quot;m dash&quot; (u2014, &amp;#8212;) characters are\nused for ranges (n dash) and breaks (m dash). Using these instead of plain\nhyphens can make text easier to read and your application will look more\npolished.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://en.wikipedia.org/wiki/Dash\">https://en.wikipedia.org/wiki/Dash</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TypographyEllipsis",
    "name": "Ellipsis string can be replaced with ellipsis character",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYou can replace the string &quot;...&quot; with a dedicated ellipsis character, ellipsis\ncharacter (u2026, &amp;#8230;). This can help make the text more readable.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://en.wikipedia.org/wiki/Ellipsis\">https://en.wikipedia.org/wiki/Ellipsis</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TypographyFractions",
    "name": "Fraction string can be replaced with fraction character",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYou can replace certain strings, such as 1/2, and 1/4, with dedicated\ncharacters for these, such as &frac12; (&amp;#189;) and &frac14; (&amp;#188;). This can help make\nthe text more readable.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://en.wikipedia.org/wiki/Number_Forms\">https://en.wikipedia.org/wiki/Number_Forms</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TypographyOther",
    "name": "Other typographical problems",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check looks for miscellaneous typographical problems and offers\nreplacement                     sequences that will make the text easier to\nread and your application more                     polished.\n</p>\n<p>\n</p>\n<p>\nUsability:Icons\n===============\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "TypographyQuotes",
    "name": "Straight quotes can be replaced with curvy quotes",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable TypographyQuotes\n</p>\n<p>\nStraight single quotes and double quotes, when used as a pair, can be replaced\nby &quot;curvy quotes&quot; (or directional quotes). This can make the text more\nreadable. Note that you should never use grave accents and apostrophes to\nquote, `like this'. (Also note that you should not use curvy quotes for code\nfragments.)\n</p>\n<p>\nMore information: <br />\n<a href=\"https://en.wikipedia.org/wiki/Quotation_mark\">https://en.wikipedia.org/wiki/Quotation_mark</a><br />\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Typos",
    "name": "Spelling error",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check looks through the string definitions, and if it finds any words\nthat look like likely misspellings, they are flagged.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UastImplementation",
    "name": "Avoid using UAST implementation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUse UAST interface whenever possible, and do not rely on UAST implementation,\nwhich is subject to change. If language-specific information is needed, the\nnext option is to use PSI directly (though these APIs are less stable and can\ndepend on compiler internals, especially in the case of Kotlin).\n</p>\n<p>\n</p>\n<p>\n</p>\n",
    "tags": [
      "lint-implementation",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UniqueConstants",
    "name": "Overlapping Enumeration Constants",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe @IntDef annotation allows you to create a light-weight &quot;enum&quot; or type\ndefinition. However, it's possible to accidentally specify the same value for\ntwo or more of the values, which can lead to hard-to-detect bugs. This check\nlooks for this scenario and flags any repeated constants.\n</p>\n<p>\nIn some cases, the repeated constant is intentional (for example, renaming a\nconstant to a more intuitive name, and leaving the old name in place for\ncompatibility purposes).  In that case, simply suppress this check by adding a\n@SuppressLint(&quot;UniqueConstants&quot;) annotation.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UniquePermission",
    "name": "Permission names are not unique",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe unqualified names or your permissions must be unique. The reason for this\nis that at build time, the aapt tool will generate a class named Manifest\nwhich contains a field for each of your permissions. These fields are named\nusing your permission unqualified names (i.e. the name portion after the last\ndot).\n</p>\n<p>\nIf more than one permission maps to the same field name, that field will\narbitrarily name just one of them.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnknownId",
    "name": "Reference to an unknown id",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe @+id/ syntax refers to an existing id, or creates a new one if it has not\nalready been defined elsewhere. However, this means that if you have a typo in\nyour reference, or if the referred view no longer exists, you do not get a\nwarning since the id will be created on demand. This check catches errors\nwhere you have renamed an id without updating all of the references to it.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnknownIdInLayout",
    "name": "Reference to an id that is not in the current layout",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe @+id/ syntax refers to an existing id, or creates a new one if it has not\nalready been defined elsewhere. However, this means that if you have a typo in\nyour reference, or if the referred view no longer exists, you do not get a\nwarning since the id will be created on demand.\n</p>\n<p>\nThis is sometimes intentional, for example where you are referring to a view\nwhich is provided in a different layout via an include. However, it is usually\nan accident where you have a typo or you have renamed a view without updating\nall the references to it.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnknownNullness",
    "name": "Unknown nullness",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable UnknownNullness\n</p>\n<p>\nTo improve referencing this code from Kotlin, consider adding explicit\nnullness information here with either @NonNull or @Nullable.\n</p>\n<p>\nAvailable options:<br />\n</p>\n<p>\nignore-deprecated (default is false):<br />\nWhether to ignore classes and members that have been annotated with @Deprecated.\n</p>\n<p>\nNormally this lint check will flag all unannotated elements, but by setting this option to true it will skip any deprecated elements.\n</p>\n<p>\nTo configure this option, use a lint.xml file with an &lt;option&gt; like this:<br />\n</p>\n<p>\n&lt;lint&gt;\n    &lt;issue id=&quot;UnknownNullness&quot;&gt;\n        &lt;option name=&quot;ignore-deprecated&quot; value=&quot;false&quot; /&gt;\n    &lt;/issue&gt;\n&lt;/lint&gt;\n</p>\n<p>\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/kotlin/interop#nullability_annotations\">https://developer.android.com/kotlin/interop#nullability_annotations</a><br />\n</p>\n<p>\nLint Implementation Issues\n==========================\n</p>\n",
    "tags": [
      "interoperability",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnlocalizedSms",
    "name": "SMS phone number missing country code",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSMS destination numbers must start with a country code or the application code\nmust ensure that the SMS is only sent when the user is in the same country as\nthe receiver.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnprotectedSMSBroadcastReceiver",
    "name": "Unprotected SMS BroadcastReceiver",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nBroadcastReceivers that declare an intent-filter for SMS_DELIVER or\nSMS_RECEIVED must ensure that the caller has the BROADCAST_SMS permission,\notherwise it is possible for malicious actors to spoof intents.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnsafeDynamicallyLoadedCode",
    "name": "load used to dynamically load code",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nDynamically loading code from locations other than the application's library\ndirectory or the Android platform's built-in library directories is dangerous,\nas there is an increased risk that the code could have been tampered with.\nApplications should use loadLibrary when possible, which provides increased\nassurance that libraries are loaded from one of these safer locations.\nApplication developers should use the features of their development\nenvironment to place application native libraries into the lib directory of\ntheir compiled APKs.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnsafeNativeCodeLocation",
    "name": "Native code outside library directory",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIn general, application native code should only be placed in the application's\nlibrary directory, not in other locations such as the res or assets\ndirectories. Placing the code in the library directory provides increased\nassurance that the code will not be tampered with after application\ninstallation. Application developers should use the features of their\ndevelopment environment to place application native libraries into the lib\ndirectory of their compiled APKs. Embedding non-shared library native\nexecutables into applications should be avoided when possible.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnsafeProtectedBroadcastReceiver",
    "name": "Unsafe Protected BroadcastReceiver",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\n`BroadcastReceiver`s that declare an intent-filter for a protected-broadcast\naction string must check that the received intent's action string matches the\nexpected value, otherwise it is possible for malicious actors to spoof\nintents.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnspecifiedImmutableFlag",
    "name": "Missing PendingIntent mutability flag",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nApps targeting Android 12 and higher must specify either FLAG_IMMUTABLE or\nFLAG_MUTABLE when constructing a PendingIntent.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/about/versions/12/behavior-changes-12#pending-intent-mutability\">https://developer.android.com/about/versions/12/behavior-changes-12#pending-intent-mutability</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnsupportedChromeOsCameraSystemFeature",
    "name": "Looking for Rear Camera only feature",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYou should look for the FEATURE_CAMERA_ANY features to include all possible\ncameras that may be on the device. Looking for FEATURE_CAMERA only looks for a\nrear facing camera, which certain tablets or Chrome OS devices don't have, as\nwell as newer device configurations and modes may place the device in a state\nwhere the rear camera is not available. To fix the issue, look for\nFEATURE_CAMERA_ANY instead.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnsupportedChromeOsHardware",
    "name": "Unsupported Chrome OS Hardware Feature",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable UnsupportedChromeOsHardware\n</p>\n<p>\nThe &lt;uses-feature&gt; element should not require this unsupported Chrome OS\nhardware feature. Any uses-feature not explicitly marked with required=&quot;false&quot;\nis necessary on the device to be installed on. Ensure that any features that\nmight prevent it from being installed on a Chrome OS device are reviewed and\nmarked as not required in the manifest.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/topic/arc/manifest.html#incompat-entries\">https://developer.android.com/topic/arc/manifest.html#incompat-entries</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnsupportedTvHardware",
    "name": "Unsupported TV Hardware Feature",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe &lt;uses-feature&gt; element should not require this unsupported TV hardware\nfeature. Any uses-feature not explicitly marked with required=&quot;false&quot; is\nnecessary on the device to be installed on. Ensure that any features that\nmight prevent it from being installed on a TV device are reviewed and marked\nas not required in the manifest.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/tv/start/hardware.html#unsupported-features\">https://developer.android.com/training/tv/start/hardware.html#unsupported-features</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Untranslatable",
    "name": "Translated Untranslatable",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nStrings can be marked with translatable=false to indicate that they are not\nintended to be translated, but are present in the resource file for other\npurposes (for example for non-display strings that should vary by some other\nconfiguration qualifier such as screen size or API level).\n</p>\n<p>\nThere are cases where translators accidentally translate these strings anyway,\nand lint will flag these occurrences with this lint check.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnusedAttribute",
    "name": "Attribute unused on older versions",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check finds attributes set in XML files that were introduced in a version\nnewer than the oldest version targeted by your application (with the\nminSdkVersion attribute).\n</p>\n<p>\nThis is not an error; the application will simply ignore the attribute.\nHowever, if the attribute is important to the appearance or functionality of\nyour application, you should consider finding an alternative way to achieve\nthe same result with only available attributes, and then you can optionally\ncreate a copy of the layout in a layout-vNN folder which will be used on API\nNN or higher where you can take advantage of the newer attribute.\n</p>\n<p>\nNote: This check does not only apply to attributes. For example, some tags can\nbe unused too, such as the new &lt;tag&gt; element in layouts introduced in API 21.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnusedIds",
    "name": "Unused id",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable UnusedIds\n</p>\n<p>\nThis resource id definition appears not to be needed since it is not\nreferenced from anywhere. Having id definitions, even if unused, is not\nnecessarily a bad idea since they make working on layouts and menus easier, so\nthere is not a strong reason to delete these.\n</p>\n<p>\nThe unused resource check can ignore tests. If you want to include resources\nthat are only referenced from tests, consider packaging them in a test source\nset instead.\n</p>\n<p>\nYou can include test sources in the unused resource check by setting the\nsystem property lint.unused-resources.include-tests=true, and to exclude them\n(usually for performance reasons), use\nlint.unused-resources.exclude-tests=true.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnusedNamespace",
    "name": "Unused namespace",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUnused namespace declarations take up space and require processing that is not\nnecessary\n</p>\n<p>\n</p>\n<p>\nPerformance:Application Size\n============================\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnusedQuantity",
    "name": "Unused quantity translations",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAndroid defines a number of different quantity strings, such as zero, one, few\nand many. However, many languages do not distinguish grammatically between all\nthese different quantities.\n</p>\n<p>\nThis lint check looks at the quantity strings defined for each translation and\nflags any quantity strings that are unused (because the language does not make\nthat quantity distinction, and Android will therefore not look it up).\n</p>\n<p>\nFor example, in Chinese, only the other quantity is used, so even if you\nprovide translations for zero and one, these strings will not be returned when\ngetQuantityString() is called, even with 0 or 1.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/resources/string-resource.html#Plurals\">https://developer.android.com/guide/topics/resources/string-resource.html#Plurals</a><br />\n</p>\n<p>\nCorrectness:Chrome OS\n=====================\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UnusedResources",
    "name": "Unused resources",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUnused resources make applications larger and slow down builds.\n</p>\n<p>\nThe unused resource check can ignore tests. If you want to include resources\nthat are only referenced from tests, consider packaging them in a test source\nset instead.\n</p>\n<p>\nYou can include test sources in the unused resource check by setting the\nsystem property lint.unused-resources.include-tests=true, and to exclude them\n(usually for performance reasons), use\nlint.unused-resources.exclude-tests=true.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UsableSpace",
    "name": "Using getUsableSpace()",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen you need to allocate disk space for large files, consider using the new\nallocateBytes(FileDescriptor, long) API, which will automatically clear cached\nfiles belonging to other apps (as needed) to meet your request.\n</p>\n<p>\nWhen deciding if the device has enough disk space to hold your new data, call\ngetAllocatableBytes(UUID) instead of using getUsableSpace(), since the former\nwill consider any cached data that the system is willing to clear on your\nbehalf.\n</p>\n<p>\nNote that these methods require API level 26. If your app is running on older\ndevices, you will probably need to use both APIs, conditionally switching on\nBuild.VERSION.SDK_INT. Lint only looks in the same compilation unit to see if\nyou are already using both APIs, so if it warns even though you are already\nusing the new API, consider moving the calls to the same file or suppressing\nthe warning.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UseAlpha2",
    "name": "Using 3-letter Codes",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFor compatibility with earlier devices, you should only use 3-letter language\nand region codes when there is no corresponding 2 letter code.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://tools.ietf.org/html/bcp47\">https://tools.ietf.org/html/bcp47</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UseCheckPermission",
    "name": "Using the result of check permission calls",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYou normally want to use the result of checking a permission; these methods\nreturn whether the permission is held; they do not throw an error if the\npermission is not granted. Code which does not do anything with the return\nvalue probably meant to be calling the enforce methods instead, e.g. rather\nthan Context#checkCallingPermission it should call\nContext#enforceCallingPermission.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UseCompoundDrawables",
    "name": "Node can be replaced by a TextView with compound drawables",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nA LinearLayout which contains an ImageView and a TextView can be more\nefficiently handled as a compound drawable (a single TextView, using the\ndrawableTop, drawableLeft, drawableRight and/or drawableBottom attributes to\ndraw one or more images adjacent to the text).\n</p>\n<p>\nIf the two widgets are offset from each other with margins, this can be\nreplaced with a drawablePadding attribute.\n</p>\n<p>\nThere's a lint quickfix to perform this conversion in the Eclipse plugin.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UseOfBundledGooglePlayServices",
    "name": "Use of bundled version of Google Play services",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nGoogle Play services SDK's can be selectively included, which enables a\nsmaller APK size. Consider declaring dependencies on individual Google Play\nservices SDK's. If you are using Firebase API's\n(https://firebase.google.com/docs/android/setup), Android Studio's Tools &rarr;\nFirebase assistant window can automatically add just the dependencies needed\nfor each feature.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developers.google.com/android/guides/setup#split\">https://developers.google.com/android/guides/setup#split</a><br />\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UseSparseArrays",
    "name": "HashMap can be replaced with SparseArray",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFor maps where the keys are of type integer, it's typically more efficient to\nuse the Android SparseArray API. This check identifies scenarios where you\nmight want to consider using SparseArray instead of HashMap for better\nperformance.\n</p>\n<p>\nThis is particularly useful when the value types are primitives like ints,\nwhere you can use SparseIntArray and avoid auto-boxing the values from int to\nInteger.\n</p>\n<p>\nIf you need to construct a HashMap because you need to call an API outside of\nyour control which requires a Map, you can suppress this warning using for\nexample the @SuppressLint annotation.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UseValueOf",
    "name": "Should use valueOf instead of new",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nYou should not call the constructor for wrapper classes directly, such as`new\nInteger(42)`. Instead, call the valueOf factory method, such as\nInteger.valueOf(42). This will typically use less memory because common\nintegers such as 0 and 1 will share a single instance.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UselessLeaf",
    "name": "Unnecessary leaf layout",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nA layout that has no children or no background can often be removed (since it\nis invisible) for a flatter and more efficient layout hierarchy.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UselessParent",
    "name": "Unnecessary parent layout",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nA layout with children that has no siblings, is not a scrollview or a root\nlayout, and does not have a background, can be removed and have its children\nmoved directly into the parent for a flatter and more efficient layout\nhierarchy.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UsesMinSdkAttributes",
    "name": "Minimum SDK and target SDK attributes not defined",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe manifest should contain a &lt;uses-sdk&gt; element which defines the minimum API\nLevel required for the application to run, as well as the target version (the\nhighest API level you have tested the version for).\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/manifest/uses-sdk-element.html\">https://developer.android.com/guide/topics/manifest/uses-sdk-element.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UsingC2DM",
    "name": "Using C2DM",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe C2DM library does not work on Android P or newer devices; you should\nmigrate to Firebase Cloud Messaging to ensure reliable message delivery.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developers.google.com/cloud-messaging/c2dm\">https://developers.google.com/cloud-messaging/c2dm</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "UsingHttp",
    "name": "Using HTTP instead of HTTPS",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe Gradle Wrapper is available both via HTTP and HTTPS. HTTPS is more secure\nsince it protects against man-in-the-middle attacks etc. Older projects\ncreated in Android Studio used HTTP but we now default to HTTPS and recommend\nupgrading existing projects.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ValidActionsXml",
    "name": "Invalid Action Descriptor",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable ValidActionsXml\n</p>\n<p>\nEnsures that an actions XML file is properly formed\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "ValidFragment",
    "name": "Fragment not instantiatable",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFrom the Fragment documentation:<br />\nEvery fragment must have an empty constructor, so it can be instantiated when\nrestoring its activity's state. It is strongly recommended that subclasses do\nnot have other constructors with parameters, since these constructors will not\nbe called when the fragment is re-instantiated; instead, arguments can be\nsupplied by the caller with setArguments(Bundle) and later retrieved by the\nFragment with getArguments().\n</p>\n<p>\nNote that this is no longer true when you are using\nandroidx.fragment.app.Fragment; with the FragmentFactory you can supply any\narguments you want (as of version androidx version 1.1).\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/android/app/Fragment.html#Fragment()\">https://developer.android.com/reference/android/app/Fragment.html#Fragment()</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ValidRestrictions",
    "name": "Invalid Restrictions Descriptor",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nEnsures that an applications restrictions XML file is properly formed\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/android/content/RestrictionsManager.html\">https://developer.android.com/reference/android/content/RestrictionsManager.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "VectorDrawableCompat",
    "name": "Using VectorDrawableCompat",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nTo use VectorDrawableCompat, you need to make two modifications to your\nproject. First, set android.defaultConfig.vectorDrawables.useSupportLibrary =\ntrue in your build.gradle file, and second, use app:srcCompat instead of\nandroid:src to refer to vector drawables.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/graphics/vector-drawable-resources\">https://developer.android.com/guide/topics/graphics/vector-drawable-resources</a><br />\nhttps://medium.com/androiddevelopers/using-vector-assets-in-android-apps-4318fd662eb9\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "VectorPath",
    "name": "Long vector paths",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nUsing long vector paths is bad for performance. There are several ways to make\nthe pathData shorter:<br />\n* Using less precision\n* Removing some minor details\n* Using the Android Studio vector conversion tool\n* Rasterizing the image (converting to PNG)\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "VectorRaster",
    "name": "Vector Image Generation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nVector icons require API 21 or API 24 depending on used features, but when\nminSdkVersion is less than 21 or 24 and Android Gradle plugin 1.4 or higher is\nused, a vector drawable placed in the drawable folder is automatically moved\nto drawable-anydpi-v21 or drawable-anydpi-v24 and bitmap images are generated\nfor different screen resolutions for backwards compatibility.\n</p>\n<p>\nHowever, there are some limitations to this raster image generation, and this\nlint check flags elements and attributes that are not fully supported. You\nshould manually check whether the generated output is acceptable for those\nolder devices.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ViewBindingType",
    "name": "tools:viewBindingType issues",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAll issues related to using the View Binding tools:viewBindingType attribute.\n</p>\n<p>\n</p>\n<p>\nCorrectness:Messages\n====================\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ViewConstructor",
    "name": "Missing View constructors for XML inflation",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nSome layout tools (such as the Android layout editor) need to find a\nconstructor with one of the following signatures:<br />\n* View(Context context)\n* View(Context context, AttributeSet attrs)\n* View(Context context, AttributeSet attrs, int defStyle)\n</p>\n<p>\nIf your custom view needs to perform initialization which does not apply when\nused in a layout editor, you can surround the given code with a check to see\nif View#isInEditMode() is false, since that method will return false at\nruntime but true within a user interface editor.\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "ViewHolder",
    "name": "View Holder Candidates",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen implementing a view Adapter, you should avoid unconditionally inflating a\nnew layout; if an available item is passed in for reuse, you should try to use\nthat one instead. This helps make for example ListView scrolling much\nsmoother.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/ui/layout/recyclerview#ViewHolder\">https://developer.android.com/guide/topics/ui/layout/recyclerview#ViewHolder</a><br />\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "VisibleForTests",
    "name": "Visible Only For Tests",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWith the @VisibleForTesting annotation you can specify an otherwise= attribute\nwhich specifies the intended visibility if the method had not been made more\nwidely visible for the tests.\n</p>\n<p>\nThis check looks for accesses from production code (e.g. not tests) where the\naccess would not have been allowed with the intended production visibility.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "VulnerableCordovaVersion",
    "name": "Vulnerable Cordova Version",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable VulnerableCordovaVersion\n</p>\n<p>\nThe version of Cordova used in the app is vulnerable to security issues.\nPlease update to the latest Apache Cordova version.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://cordova.apache.org/announcements/2015/11/20/security.html\">https://cordova.apache.org/announcements/2015/11/20/security.html</a><br />\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "Wakelock",
    "name": "Incorrect WakeLock usage",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nFailing to release a wakelock properly can keep the Android device in a high\npower mode, which reduces battery life. There are several causes of this, such\nas releasing the wake lock in onDestroy() instead of in onPause(), failing to\ncall release() in all possible code paths after an acquire(), and so on.\n</p>\n<p>\nNOTE: If you are using the lock just to keep the screen on, you should\nstrongly consider using FLAG_KEEP_SCREEN_ON instead. This window flag will be\ncorrectly managed by the platform as the user moves between applications and\ndoesn't require a special permission. See\nhttps://developer.android.com/reference/android/view/WindowManager.LayoutParam\ns.html#FLAG_KEEP_SCREEN_ON.\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WakelockTimeout",
    "name": "Using wakeLock without timeout",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWakelocks have two acquire methods: one with a timeout, and one without. You\nshould generally always use the one with a timeout. A typical timeout is 10\nminutes. If the task takes longer than it is critical that it happens (i.e.\ncan't use JobScheduler) then maybe they should consider a foreground service\ninstead (which is a stronger run guarantee and lets the user know something\nlong/important is happening).\n</p>\n<p>\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WatchFaceEditor",
    "name": "Watch face editor must use launchMode=\"standard\"",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWatch face editor activities must be able to launch in the Wear OS app\nactivity task in order to work correctly. Thus only launchMode=&quot;standard&quot; is\nallowed. The watch face will not be shown on the watch if it does not satisfy\nthis requirement.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WatchFaceForAndroidX",
    "name": "AndroidX watch faces must use action WATCH_FACE_EDITOR",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf the package depends on androidx.wear:wear-watchface, and an AndroidX watch\nface declares the wearableConfigurationAction metadata, its value should be\nandroidx.wear.watchface.editor.action.WATCH_FACE_EDITOR.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/wearables/watch-faces/configuration\">https://developer.android.com/training/wearables/watch-faces/configuration</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WearStandaloneAppFlag",
    "name": "Invalid or missing Wear standalone app flag",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWearable apps should specify whether they can work standalone, without a phone\napp. Add a valid meta-data entry for com.google.android.wearable.standalone to\nyour application element and set the value to true or false.\n&lt;meta-data android:name=&quot;com.google.android.wearable.standalone&quot;\n           android:value=&quot;true&quot;/&gt;`\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/wearables/apps/packaging.html\">https://developer.android.com/training/wearables/apps/packaging.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WearableActionDuplicate",
    "name": "Duplicate watch face configuration activities found",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nIf and only if a watch face service defines wearableConfigurationAction\nmetadata, with the value WATCH_FACE_EDITOR, there should be an activity in the\nsame package, which has an intent filter for WATCH_FACE_EDITOR (with\ncom.google.android.wearable.watchface.category.WEARABLE_CONFIGURATION if\nminSdkVersion is less than 30).\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/wearables/watch-faces/configuration\">https://developer.android.com/training/wearables/watch-faces/configuration</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WearableBindListener",
    "name": "Usage of Android Wear BIND_LISTENER is deprecated",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nBIND_LISTENER receives all Android Wear events whether the application needs\nthem or not. This can be inefficient and cause applications to wake up\nunnecessarily. With Google Play Services 8.2.0 or later it is recommended to\nuse a more efficient combination of manifest listeners and api-based live\nlisteners filtered by action, path and/or path prefix.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://android-developers.googleblog.com/2016/04/deprecation-of-bindlistener.html\">https://android-developers.googleblog.com/2016/04/deprecation-of-bindlistener.html</a><br />\n</p>\n",
    "tags": [
      "performance",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "WearableConfigurationAction",
    "name": "Wear configuration action metadata must match an activity",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nOnly when a watch face service defines wearableConfigurationAction metadata,\nwith the value WATCH_FACE_EDITOR, there should be an activity in the same\npackage, which has an intent filter for WATCH_FACE_EDITOR (with\ncom.google.android.wearable.watchface.category.WEARABLE_CONFIGURATION if\nminSdkVersion is less than 30).\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/training/wearables/watch-faces/configuration\">https://developer.android.com/training/wearables/watch-faces/configuration</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WebViewApiAvailability",
    "name": "WebView API Availability",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe androidx.webkit library is a static library you can add to your Android\napplication allowing you to use new APIs on older platform versions, targeting\nmore devices.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/reference/androidx/webkit/package-summary\">https://developer.android.com/reference/androidx/webkit/package-summary</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WebViewClientOnReceivedSslError",
    "name": "Proceeds with the HTTPS connection despite SSL errors",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThis check looks for onReceivedSslError implementations that invoke\nSslErrorHandler#proceed.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WebViewLayout",
    "name": "WebViews in wrap_content parents",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe WebView implementation has certain performance optimizations which will\nnot work correctly if the parent view is using wrap_content rather than\nmatch_parent. This can lead to subtle UI bugs.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WebpUnsupported",
    "name": "WebP Unsupported",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe WebP format requires Android 4.0 (API 15). Certain features, such as\nlossless encoding and transparency, requires Android 4.2.1 (API 18; API 17 is\n4.2.0.)\n</p>\n<p>\n</p>\n",
    "tags": [
      "user-experience",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WeekBasedYear",
    "name": "Week Based Year",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe DateTimeFormatter pattern YYYY returns the week based year, not the\nera-based year. This means that 12/29/2019 will format to 2019, but 12/30/2019\nwill format to 2020!\n</p>\n<p>\nIf you expected this to format as 2019, you should use the pattern yyyy\ninstead.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://stackoverflow.com/questions/46847245/using-datetimeformatter-on-january-first-cause-an-invalid-year-value\">https://stackoverflow.com/questions/46847245/using-datetimeformatter-on-january-first-cause-an-invalid-year-value</a><br />\n</p>\n",
    "tags": [
      "i18n",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WifiManagerLeak",
    "name": "WifiManager Leak",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nOn versions prior to Android N (24), initializing the WifiManager via\nContext#getSystemService can cause a memory leak if the context is not the\napplication context. Change context.getSystemService(...) to\ncontext.getApplicationContext().getSystemService(...).\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WifiManagerPotentialLeak",
    "name": "WifiManager Potential Leak",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nOn versions prior to Android N (24), initializing the WifiManager via\nContext#getSystemService can cause a memory leak if the context is not the\napplication context.\n</p>\n<p>\nIn many cases, it's not obvious from the code where the Context is coming from\n(e.g. it might be a parameter to a method, or a field initialized from various\nmethod calls). It's possible that the context being passed in is the\napplication context, but to be on the safe side, you should consider changing\ncontext.getSystemService(...) to\ncontext.getApplicationContext().getSystemService(...).\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WorldReadableFiles",
    "name": "openFileOutput() with MODE_WORLD_READABLE",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThere are cases where it is appropriate for an application to write world\nreadable files, but these should be reviewed carefully to ensure that they\ncontain no private data that is leaked to other applications.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WorldWriteableFiles",
    "name": "openFileOutput() with MODE_WORLD_WRITEABLE",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThere are cases where it is appropriate for an application to write world\nwriteable files, but these should be reviewed carefully to ensure that they\ncontain no private data, and that if the file is modified by a malicious\napplication it does not trick or compromise your application.\n</p>\n<p>\n</p>\n",
    "tags": [
      "security",
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WrongCall",
    "name": "Using wrong draw/layout method",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nCustom views typically need to call measure() on their children, not\nonMeasure. Ditto for onDraw, onLayout, etc.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WrongCase",
    "name": "Wrong case for view tag",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nMost layout tags, such as &lt;Button&gt;, refer to actual view classes and are\ntherefore capitalized. However, there are exceptions such as &lt;fragment&gt; and\n&lt;include&gt;. This lint check looks for incorrect capitalizations.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/components/fragments.html\">https://developer.android.com/guide/components/fragments.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "WrongConstant",
    "name": "Incorrect constant",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nEnsures that when parameter in a method only allows a specific set of\nconstants, calls obey those rules.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WrongFolder",
    "name": "Resource file in the wrong res folder",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nResource files are sometimes placed in the wrong folder, and it can lead to\nsubtle bugs that are hard to understand. This check looks for problems in this\narea, such as attempting to place a layout &quot;alias&quot; file in a layout/ folder\nrather than the values/ folder where it belongs.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "WrongManifestParent",
    "name": "Wrong manifest parent",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nThe &lt;uses-library&gt; element should be defined as a direct child of the\n&lt;application&gt; tag, not the &lt;manifest&gt; tag or an &lt;activity&gt; tag. Similarly, a\n&lt;uses-sdk&gt; tag must be declared at the root level, and so on. This check looks\nfor incorrect declaration locations in the manifest, and complains if an\nelement is found in the wrong place.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/topics/manifest/manifest-intro.html\">https://developer.android.com/guide/topics/manifest/manifest-intro.html</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "CRITICAL",
    "constantDebtMinutes": 5
  },
  {
    "key": "WrongRegion",
    "name": "Suspicious Language/Region Combination",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nAndroid uses the letter codes ISO 639-1 for languages, and the letter codes\nISO 3166-1 for the region codes. In many cases, the language code and the\ncountry where the language is spoken is the same, but it is also often not the\ncase. For example, while 'se' refers to Sweden, where Swedish is spoken, the\nlanguage code for Swedish is not se (which refers to the Northern Sami\nlanguage), the language code is sv. And similarly the region code for sv is El\nSalvador.\n</p>\n<p>\nThis lint check looks for suspicious language and region combinations, to help\ncatch cases where you've accidentally used the wrong language or region code.\nLint knows about the most common regions where a language is spoken, and if a\nfolder combination is not one of these, it is flagged as suspicious.\n</p>\n<p>\nNote however that it may not be an error: you can theoretically have speakers\nof any language in any region and want to target that with your resources, so\nthis check is aimed at tracking down likely mistakes, not to enforce a\nspecific set of region and language combinations.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "severity": "MINOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WrongThread",
    "name": "Wrong Thread",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nEnsures that a method which expects to be called on a specific thread, is\nactually called from that thread. For example, calls on methods in widgets\nshould always be made on the UI thread.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/components/processes-and-threads.html#Threads\">https://developer.android.com/guide/components/processes-and-threads.html#Threads</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WrongThreadInterprocedural",
    "name": "Wrong Thread (Interprocedural)",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\nNOTE: This issue is disabled by default!\nYou can enable it by adding --enable WrongThreadInterprocedural\n</p>\n<p>\nSearches for interprocedural call paths that violate thread annotations in the\nprogram. Tracks the flow of instantiated types and lambda expressions to\nincrease accuracy across method boundaries.\n</p>\n<p>\nMore information: <br />\n<a href=\"https://developer.android.com/guide/components/processes-and-threads.html#Threads\">https://developer.android.com/guide/components/processes-and-threads.html#Threads</a><br />\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "WrongViewCast",
    "name": "Mismatched view type",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nKeeps track of the view types associated with ids and if it finds a usage of\nthe id in the Java code it ensures that it is treated as the same type.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "XmlEscapeNeeded",
    "name": "Missing XML Escape",
    "description": "<p>\nVendor: Android Open Source Project\nContact: https://groups.google.com/g/lint-dev\nFeedback: https://issuetracker.google.com/issues/new?component=192708\n</p>\n<p>\nWhen a string contains characters that have special usage in XML, you must\nescape the characters.\n</p>\n<p>\n</p>\n",
    "tags": [
      "android"
    ],
    "type": "BUG",
    "severity": "MAJOR",
    "constantDebtMinutes": 5
  },
  {
    "key": "external.catchall",
    "name": "Android Lint Rule",
    "description": "This reporting may be triggered by a custom Android Lint rule or by a default Android Lint rule that has not yet been added to the Sonar Kotlin plugin.",
    "tags": [
      "android"
    ],
    "type": "CODE_SMELL",
    "constantDebtMinutes": 0
  }
]